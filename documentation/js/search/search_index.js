var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.018,1,0.576]],["body/components/AppComponent.html",[0,0.032,1,0.989,2,0.326,3,0.277,4,0.917,5,0.917,6,0.917,7,0.917,8,0.184,9,2.67,10,0.833,11,1.575,12,1.581,13,2.179,14,1.226,15,4.864,16,1.226,17,4.316,18,0.277,19,0.822,20,0.986,21,1.781,22,2.099,23,2.812,24,2.915,25,0.378,26,2.67,27,1.538,28,1.438,29,1.178,30,0.634,31,4.316,32,0.49,33,0.037,34,0.608,35,0.464,36,0.49,37,4.864,38,1.114,39,2.03,40,1.811,41,0.608,42,0.378,43,1.216,44,0.917,45,0.917,46,1.216,47,0.277,48,0.14,49,1.629,50,2.03,51,1.629,52,2.67,53,2.304,54,1.216,55,3.227,56,1.788,57,1.348,58,1.811,59,0.755,60,1.226,61,1.226,62,0.822,63,1.475,64,0.917,65,0.917,66,0.614,67,0.917,68,0.614,69,0.917,70,0.614,71,0.55,72,1.382,73,0.614,74,0.578,75,0.614,76,0.917,77,0.614,78,0.917,79,0.614,80,0.917,81,0.917,82,0.614,83,0.917,84,0.614,85,0.917,86,0.614,87,0.917,88,0.614,89,0.917,90,0.917,91,0.55,92,0.833,93,0.917,94,0.025,95,0.025]],["title/modules/AppModule.html",[96,1.698,97,1.903]],["body/modules/AppModule.html",[0,0.032,1,1.116,2,0.281,3,0.238,8,0.158,33,0.038,41,0.719,42,0.326,47,0.334,48,0.121,59,0.651,66,1.041,68,1.041,70,1.014,73,1.041,74,0.522,75,1.041,77,1.014,79,1.041,82,1.041,84,1.014,86,1.014,88,1.041,91,0.908,94,0.023,95,0.023,96,2.188,97,3.929,98,1.75,99,3.725,100,3.213,101,2.783,102,2.301,103,2.301,104,2.301,105,3.226,106,2.301,107,1.985,108,2.781,109,3.898,110,2.301,111,1.985,112,3.898,113,2.781,114,2.781,115,2.781,116,1.985,117,3.898,118,2.781,119,2.783,120,0.79,121,2.781,122,2.301,123,2.301,124,2.781,125,1.985,126,4.501,127,3.898,128,2.301,129,2.781,130,2.781,131,1.985,132,2.781,133,1.985,134,2.781,135,2.781,136,1.985,137,3.898,138,1.985,139,1.985,140,2.781,141,2.781,142,3.898,143,2.301,144,3.801,145,2.781,146,2.783,147,2.781,148,1.75,149,3.898,150,5.579,151,2.781,152,2.452,153,2.781,154,2.781,155,1.75,156,1.75,157,3.667,158,2.781,159,1.985,160,2.781,161,2.781,162,2.781,163,2.781,164,0.954]],["title/guards/AuthGuard.html",[144,2.159,165,1.698]],["body/guards/AuthGuard.html",[2,0.39,3,0.331,8,0.22,13,1.951,18,0.331,23,1.951,25,0.453,29,1.122,30,0.621,32,0.736,33,0.037,34,0.568,35,0.416,36,0.736,41,0.651,42,0.453,44,1.098,45,1.098,47,0.331,48,0.168,94,0.028,95,0.028,120,1.098,144,3.464,157,4.091,164,1.326,165,2.169,166,3.865,167,0.827,168,5.562,169,3.198,170,2.036,171,3.865,172,3.198,173,4.603,174,4.389,175,4.603,176,3.865,177,4.015,178,0.977,179,4.389,180,4.015,181,1.908,182,3.865,183,1.664,184,2.759,185,2.169,186,0.998,187,1.326,188,2.759,189,1.098,190,3.865,191,3.865,192,1.601,193,3.198]],["title/components/CalendarComponent.html",[0,0.018,66,0.576]],["body/components/CalendarComponent.html",[0,0.023,1,0.291,2,0.155,3,0.131,4,0.435,5,0.888,6,0.435,7,0.435,8,0.087,10,0.395,11,1.424,12,1.365,14,0.704,16,0.704,18,0.131,19,0.472,20,0.533,21,1.449,22,0.934,25,0.179,27,1.2,28,0.927,29,0.661,30,0.651,32,0.746,33,0.038,34,0.61,35,0.469,36,0.746,38,0.395,41,0.521,42,0.179,43,0.577,44,0.435,45,0.435,46,0.577,47,0.131,48,0.066,51,0.773,53,1.77,54,1.803,56,1.75,57,0.774,58,1.753,59,0.358,60,0.704,61,0.704,62,0.472,63,1.02,64,0.435,65,0.435,66,0.684,67,0.435,68,0.291,69,0.435,70,0.291,71,0.261,72,0.888,73,0.291,74,0.717,75,0.291,76,0.435,77,0.291,78,0.435,79,0.291,80,0.435,81,0.435,82,0.291,83,0.435,84,0.291,85,0.435,86,0.291,87,0.435,88,0.291,89,0.435,90,0.435,91,0.261,92,0.395,93,0.435,94,0.015,95,0.015,120,0.435,148,2.482,159,3.015,164,0.525,167,0.423,170,1.525,178,0.962,181,0.525,186,0.64,187,0.525,189,0.704,192,1.027,194,1.266,195,0.976,196,3.124,197,2.479,198,3.591,199,3.591,200,3.591,201,3.591,202,3.265,203,2.479,204,2.479,205,2.479,206,2.479,207,2.479,208,3.591,209,2.479,210,2.479,211,2.479,212,1.121,213,2.051,214,0.859,215,1.559,216,2.479,217,2.479,218,4.052,219,1.53,220,3.124,221,1.02,222,2.479,223,1.53,224,2.479,225,2.703,226,1.53,227,2.479,228,1.53,229,3.945,230,2.479,231,1.53,232,1.53,233,2.479,234,1.53,235,2.479,236,1.53,237,2.479,238,1.53,239,1.53,240,2.479,241,1.53,242,1.53,243,1.53,244,1.53,245,1.53,246,1.53,247,1.53,248,0.577,249,1.266,250,1.53,251,1.53,252,1.53,253,1.53,254,3.124,255,1.53,256,1.53,257,1.787,258,1.53,259,2.051,260,1.132,261,1.53,262,1.53,263,1.53,264,0.963,265,1.53,266,1.266,267,1.53,268,3.124,269,1.53,270,4.447,271,1.53,272,1.53,273,1.53,274,1.53,275,1.53,276,1.53,277,1.53,278,1.53,279,2.479,280,1.53,281,2.479,282,1.53,283,1.53,284,3.591,285,1.53,286,1.53,287,2.585,288,1.53,289,2.972,290,1.53,291,2.972,292,1.53,293,1.071,294,1.53,295,2.051,296,1.77,297,1.559,298,1.53,299,1.53,300,1.53,301,1.53,302,1.53,303,1.53,304,1.266,305,0.963,306,1.266,307,1.266,308,1.559,309,1.53,310,2.479,311,3.591,312,2.479,313,2.479,314,2.479,315,1.53,316,1.53,317,1.266,318,1.53,319,1.53,320,2.479,321,2.479,322,3.124,323,1.53,324,1.53,325,3.591,326,3.591,327,3.591,328,3.832,329,2.972,330,3.591,331,4.63,332,3.591,333,2.23,334,1.449,335,1.53,336,1.093,337,1.294,338,1.982,339,1.753,340,1.093,341,1.77,342,1.53,343,0.85,344,1.391,345,1.559,346,1.53,347,1.093,348,2.245,349,1.252,350,1.252,351,0.773,352,0.963,353,1.965,354,2.016,355,1.53,356,2.051,357,1.75,358,1.75,359,1.53,360,1.53,361,1.53,362,2.338,363,1.559,364,1.266,365,1.559,366,1.77,367,1.559,368,2.822,369,1.753,370,2.23,371,1.77,372,1.77,373,0.934,374,1.252,375,2.482,376,1.252,377,2.051,378,1.093,379,1.577,380,2.371,381,1.266,382,2.132,383,2.051,384,1.53,385,1.53,386,2.585,387,1.53,388,1.53,389,1.53,390,1.53,391,1.093,392,1.559,393,0.963,394,0.963,395,1.53,396,1.53,397,1.53,398,1.53,399,1.53]],["title/directives/ClickOutsideDirective.html",[62,0.576,91,0.516]],["body/directives/ClickOutsideDirective.html",[2,0.417,3,0.353,8,0.235,10,1.065,11,1.304,18,0.353,20,0.861,25,0.483,30,0.639,32,0.626,33,0.037,34,0.483,35,0.433,36,0.626,41,0.483,42,0.483,47,0.353,48,0.179,62,1.04,91,0.861,92,1.507,94,0.03,95,0.03,148,2.594,187,1.414,257,1.414,400,4.709,401,3.412,402,4.709,403,5.46,404,5.051,405,4.124,406,5.691,407,4.124,408,5.051,409,2.944,410,3.898,411,4.124,412,4.124,413,5.051,414,4.124,415,4.124,416,4.124,417,4.124,418,4.124,419,4.124,420,4.124,421,4.124]],["title/components/DashboardComponent.html",[0,0.018,68,0.576]],["body/components/DashboardComponent.html",[0,0.027,1,0.419,2,0.222,3,0.189,4,0.626,5,1.12,6,0.626,7,0.626,8,0.125,10,0.568,11,1.488,12,1.476,14,0.935,16,0.935,18,0.189,19,0.627,20,0.913,21,1.606,22,0.83,25,0.258,27,1.33,28,1.018,29,0.834,30,0.648,32,0.334,33,0.037,34,0.512,35,0.448,36,0.334,38,1.018,41,0.575,42,0.258,43,0.83,44,0.626,45,0.626,46,0.83,47,0.189,48,0.096,50,1.385,54,0.83,56,0.912,57,1.231,58,2.455,59,0.515,60,0.935,61,0.935,62,0.627,63,1.243,64,0.626,65,0.626,66,0.419,67,0.626,68,0.833,69,0.626,70,0.419,71,0.375,72,1.12,73,0.419,74,0.73,75,0.419,76,0.626,77,0.419,78,0.626,79,0.419,80,0.626,81,0.626,82,0.419,83,0.626,84,0.419,85,0.626,86,0.419,87,1.33,88,0.419,89,0.626,90,1.33,91,0.375,92,0.568,93,0.626,94,0.019,95,0.019,120,0.626,156,2.751,167,0.561,170,1.746,178,0.561,181,1.352,186,0.85,187,0.755,189,1.33,195,1.231,212,1.366,214,1.236,215,2.071,218,3.82,221,0.935,225,1.112,248,0.83,249,1.822,257,1.129,259,2.724,293,1.352,295,1.822,308,2.071,317,1.822,333,2.814,334,1.352,336,1.572,337,1.812,338,2.035,339,1.236,340,1.572,341,1.572,343,1.129,344,1.848,345,2.071,347,3.737,348,2.828,349,2.208,350,2.208,351,1.662,352,1.385,353,2.071,354,2.455,357,1.633,358,1.812,363,1.385,364,1.822,368,1.236,369,1.236,373,0.83,374,1.112,375,1.385,380,1.848,392,2.48,393,2.48,422,1.822,423,3.942,424,3.291,425,3.619,426,5.234,427,4.374,428,5.234,429,5.234,430,4.374,431,3.291,432,2.202,433,2.202,434,2.202,435,2.202,436,2.202,437,2.202,438,2.202,439,2.202,440,2.202,441,1.572,442,1.572,443,2.202,444,2.202,445,2.202,446,2.202,447,2.202,448,2.202,449,2.202,450,2.202,451,2.202,452,4.681,453,2.202,454,2.202,455,2.202,456,2.202,457,2.202,458,2.202,459,2.202,460,2.202,461,2.202,462,2.202,463,2.202,464,3.942,465,2.202,466,4.374,467,4.374,468,4.374,469,3.942,470,2.724,471,2.35,472,1.822,473,2.202,474,1.822,475,2.202,476,1.822,477,2.202,478,2.202,479,2.202,480,2.202,481,1.572,482,1.572,483,1.236,484,1.572,485,2.202,486,1.385]],["title/guards/DataGuard.html",[146,2.159,165,1.698]],["body/guards/DataGuard.html",[2,0.342,3,0.29,8,0.193,13,1.711,18,0.29,23,1.711,25,0.397,29,1.054,30,0.584,32,0.756,33,0.037,34,0.584,35,0.427,36,0.756,41,0.644,42,0.397,44,0.963,45,0.963,47,0.29,48,0.147,74,0.799,94,0.026,95,0.026,101,3.183,120,0.963,146,3.183,156,2.132,157,3.927,164,1.162,165,1.902,167,0.76,169,2.805,170,1.975,172,2.805,173,4.382,174,4.124,175,4.382,177,3.69,178,0.963,179,4.124,180,3.69,181,1.887,183,1.529,184,2.42,185,1.902,186,0.875,187,1.162,188,2.42,189,0.963,192,1.848,248,1.277,293,1.887,296,3.558,297,3.135,487,3.389,488,4.459,489,3.389,490,3.389,491,4.459,492,3.389,493,3.69,494,4.983,495,2.42,496,2.805,497,3.389,498,2.805,499,2.42,500,4.983,501,4.983,502,2.516,503,3.389,504,3.389,505,3.389,506,3.389,507,3.389]],["title/classes/Emotion.html",[48,0.131,71,0.516]],["body/classes/Emotion.html",[2,0.373,3,0.316,8,0.21,18,0.316,19,0.897,20,1.044,25,0.432,30,0.677,32,0.715,33,0.037,34,0.709,35,0.525,36,0.715,38,1.61,47,0.316,48,0.205,71,0.932,94,0.028,95,0.028,167,0.803,178,0.885,181,1.938,260,2.497,508,3.052,509,4.525,510,4.86,511,4.294,512,4.71,513,4.71,514,5.189,515,4.71,516,3.688,517,3.688,518,3.688,519,3.688,520,3.688,521,3.688,522,3.688,523,3.688,524,3.052,525,3.688,526,3.688,527,3.688,528,3.688,529,3.688]],["title/components/EmotionListComponent.html",[0,0.018,70,0.576]],["body/components/EmotionListComponent.html",[0,0.031,1,0.587,2,0.312,3,0.264,4,0.876,5,1.19,6,0.876,7,0.876,8,0.176,10,0.796,11,1.566,12,1.558,14,1.19,16,1.19,18,0.264,25,0.557,30,0.624,33,0.036,34,0.557,35,0.407,38,1.081,41,0.597,42,0.361,47,0.264,48,0.134,56,1.735,57,0.963,59,0.722,60,1.19,61,1.19,62,0.797,63,1.449,64,0.876,65,0.876,66,0.587,67,0.876,68,0.587,69,0.876,70,0.971,71,1.039,72,1.351,73,0.587,74,0.561,75,0.587,76,0.876,77,0.587,78,0.876,79,0.587,80,0.876,81,0.876,82,0.587,83,0.876,84,0.587,85,0.876,86,0.587,87,0.876,88,0.587,89,0.876,90,0.876,91,0.526,92,0.796,93,0.876,94,0.025,95,0.025,125,3.924,167,0.714,178,0.526,181,1.436,186,1.081,195,1.484,212,1.592,221,0.876,293,1.058,297,1.94,305,3.353,334,1.058,337,1.969,338,2.33,339,1.731,341,2.202,348,2.4,349,1.557,350,1.557,351,1.557,352,1.94,353,1.94,354,1.731,358,1.278,373,1.162,379,1.557,382,1.557,472,2.552,476,2.552,486,2.634,530,4.549,531,1.94,532,3.393,533,2.989,534,3.924,535,4.753,536,4.753,537,3.465,538,3.084,539,3.084,540,2.552,541,1.94,542,3.465,543,2.552,544,1.94,545,3.084,546,3.084,547,1.94,548,4.187]],["title/classes/Entry.html",[48,0.131,74,0.405]],["body/classes/Entry.html",[2,0.368,3,0.312,8,0.207,18,0.312,19,0.89,20,1.071,24,3.055,25,0.427,30,0.695,32,0.553,33,0.037,34,0.427,35,0.502,36,0.553,38,1.578,41,0.427,47,0.312,48,0.203,71,1.011,74,0.626,94,0.027,95,0.027,225,2.842,257,1.77,260,2.356,343,1.867,502,2.748,509,4.504,549,3.014,550,5.443,551,3.886,552,4.504,553,4.673,554,4.673,555,3.643,556,3.643,557,3.643,558,3.643,559,3.643,560,3.643,561,3.643,562,2.601,563,3.643,564,3.643,565,3.643,566,3.014]],["title/components/EntryListComponent.html",[0,0.018,73,0.576]],["body/components/EntryListComponent.html",[0,0.03,1,0.515,2,0.273,3,0.232,4,0.769,5,1.086,6,0.769,7,0.769,8,0.154,10,0.698,11,1.538,12,1.528,14,1.086,16,1.086,18,0.232,19,0.728,20,0.822,21,1.81,25,0.317,27,1.499,29,1.075,30,0.595,32,0.58,33,0.037,34,0.595,35,0.436,36,0.58,41,0.595,42,0.317,43,1.019,44,0.769,45,0.769,47,0.232,48,0.117,49,1.366,51,1.931,54,1.019,56,1.997,57,1.194,58,2.489,59,0.633,60,1.086,61,1.086,62,0.728,63,1.369,64,0.769,65,0.769,66,0.515,67,0.769,68,0.515,69,0.769,70,0.515,71,0.461,72,1.26,73,0.918,74,0.803,75,0.515,76,0.769,77,0.515,78,0.769,79,0.515,80,0.769,81,0.769,82,0.515,83,0.769,84,0.515,85,0.769,86,0.515,87,0.769,88,0.515,89,0.769,90,0.769,91,0.461,92,0.698,93,0.769,94,0.022,95,0.022,120,0.769,131,3.768,167,0.652,170,1.81,178,0.652,186,0.987,195,1.385,212,1.505,215,3.198,221,1.086,248,1.019,305,3.032,334,0.928,337,1.837,338,2.107,343,0.928,353,2.79,356,2.239,357,1.121,358,2.107,362,2.433,365,1.702,366,1.932,367,1.702,368,2.489,369,1.519,372,1.932,379,2.433,380,2.705,391,1.932,482,1.932,483,2.146,531,1.702,532,3.166,533,2.73,544,3.032,547,1.702,567,4.367,568,3.824,569,2.239,570,2.239,571,3.824,572,2.239,573,2.706,574,3.824,575,1.932,576,2.706,577,2.706,578,2.706,579,2.239,580,3.988,581,4.819,582,3.441,583,4.819,584,2.239,585,2.706,586,2.706,587,2.706,588,1.932,589,2.706,590,2.706,591,2.706,592,2.239]],["title/components/LoginComponent.html",[0,0.018,75,0.576]],["body/components/LoginComponent.html",[0,0.03,1,0.515,2,0.273,3,0.232,4,0.769,5,0.769,6,0.769,7,0.769,8,0.154,10,0.698,11,1.538,12,1.528,14,1.086,16,1.086,18,0.232,19,0.728,20,0.756,21,1.744,22,1.671,23,2.239,25,0.317,27,1.445,28,1.244,29,0.938,30,0.649,32,0.411,33,0.037,34,0.564,35,0.436,36,0.411,38,1.455,41,0.595,42,0.317,43,1.019,44,0.769,45,0.769,46,1.019,47,0.232,48,0.117,50,1.702,54,1.816,57,1.385,59,0.633,60,1.086,61,1.086,62,0.728,63,1.369,64,0.769,65,0.769,66,0.515,67,0.769,68,0.515,69,0.769,70,0.515,71,0.461,72,1.26,73,0.515,74,0.512,75,0.918,76,0.769,77,0.515,78,0.769,79,0.515,80,0.769,81,0.769,82,0.515,83,0.769,84,0.515,85,0.769,86,0.515,87,0.769,88,0.515,89,0.769,90,0.769,91,0.461,92,0.698,93,0.769,94,0.022,95,0.022,120,0.769,152,3.634,155,3.198,167,0.652,170,1.81,178,0.756,186,0.987,187,0.928,189,0.769,192,1.121,195,1.385,212,1.505,221,1.26,334,0.928,337,1.121,338,1.584,373,1.671,374,2.239,376,1.931,575,1.932,593,2.239,594,4.434,595,3.824,596,4.819,597,4.207,598,3.441,599,3.441,600,4.819,601,2.239,602,3.824,603,2.706,604,2.706,605,2.706,606,2.706,607,2.706,608,2.706,609,3.166,610,2.239,611,4.819,612,2.706,613,2.706,614,2.706,615,2.706,616,2.239,617,2.706,618,2.239,619,2.706,620,2.706,621,1.932,622,3.164,623,2.239,624,2.405,625,2.239,626,1.702,627,2.239,628,2.239,629,2.239,630,2.706,631,1.932,632,2.239,633,2.239,634,2.239,635,2.239,636,1.932]],["title/components/NavigationComponent.html",[0,0.018,77,0.576]],["body/components/NavigationComponent.html",[0,0.027,1,0.418,2,0.222,3,0.188,4,0.624,5,1.394,6,0.624,7,0.624,8,0.125,10,0.567,11,1.487,12,1.475,14,0.933,16,0.933,18,0.337,19,0.625,20,0.797,21,1.604,23,2.477,25,0.257,26,1.816,27,1.394,29,0.989,30,0.596,32,0.333,33,0.037,34,0.511,35,0.374,36,0.333,41,0.548,42,0.257,43,0.827,44,0.624,45,0.624,47,0.188,48,0.095,49,1.108,51,1.658,52,4.327,54,1.97,56,0.909,57,1.67,58,1.232,59,0.514,60,0.933,61,1.328,62,0.625,63,1.241,64,0.624,65,0.624,66,0.418,67,0.624,68,0.418,69,0.624,70,0.418,71,0.374,72,1.118,73,0.418,74,0.44,75,0.418,76,0.624,77,0.831,78,0.624,79,0.418,80,0.624,81,0.624,82,0.418,83,0.624,84,0.418,85,0.624,86,0.418,87,0.624,88,0.418,89,0.624,90,1.445,91,0.56,92,0.567,93,0.624,94,0.019,95,0.019,120,0.624,122,1.816,123,1.816,156,2.747,159,3.118,164,1.126,167,0.56,170,1.604,178,0.671,181,1.349,186,0.848,193,1.816,195,1.229,202,3.614,212,1.364,221,1.118,293,0.753,304,1.816,306,1.816,308,1.381,333,1.567,334,1.744,337,1.937,338,2.107,339,1.232,343,1.126,344,1.843,345,2.066,348,2.7,349,2.205,350,1.986,351,1.108,357,2.215,358,2.033,362,2.205,363,2.066,365,2.066,366,2.344,367,2.066,368,2.624,369,1.843,370,1.567,371,1.567,372,1.567,373,1.849,374,2.361,375,3.199,376,1.986,377,1.816,378,2.809,379,1.108,380,2.208,382,1.986,383,1.816,386,1.816,391,2.809,392,1.381,393,2.066,394,1.381,470,1.816,471,2.809,481,1.567,482,1.567,483,1.232,484,1.567,486,1.381,510,3.614,524,3.256,544,1.381,547,1.381,575,1.567,584,1.816,616,3.614,618,1.816,621,1.567,624,2.066,631,1.567,637,1.816,638,2.717,639,3.934,640,3.284,641,3.869,642,4.367,643,3.284,644,2.195,645,2.195,646,2.195,647,3.284,648,2.195,649,2.195,650,2.195,651,2.195,652,1.816,653,1.816,654,2.195,655,2.195,656,2.195,657,2.195,658,3.284,659,2.344,660,1.816,661,2.195,662,2.195,663,3.284,664,2.195,665,3.284,666,2.195,667,2.195,668,2.195,669,2.195,670,3.284,671,1.816,672,2.195,673,2.195,674,2.195,675,2.195,676,1.816,677,2.195,678,2.195,679,1.816,680,2.195,681,3.284,682,3.284,683,1.816,684,2.195,685,2.195,686,2.195,687,2.195,688,2.195]],["title/components/ReadMoodComponent.html",[0,0.018,79,0.576]],["body/components/ReadMoodComponent.html",[0,0.026,1,0.373,2,0.198,3,0.168,4,0.556,5,0.556,6,0.556,7,0.556,8,0.209,10,0.505,11,1.456,12,1.442,14,0.855,16,0.855,18,0.168,19,0.573,20,0.861,21,1.61,22,1.768,24,2.059,25,0.229,27,1.334,28,1.212,29,0.993,30,0.606,32,0.457,33,0.038,34,0.521,35,0.419,36,0.457,38,1.063,40,1.098,41,0.55,42,0.229,43,0.737,44,0.556,45,0.556,46,0.737,47,0.461,48,0.085,49,0.988,51,0.988,56,1.842,57,0.611,59,0.458,60,0.855,61,0.855,62,0.573,63,1.334,64,0.556,65,0.556,66,0.373,67,0.556,68,0.373,69,0.556,70,0.373,71,0.942,72,1.042,73,0.373,74,0.403,75,0.373,76,0.556,77,0.373,78,0.556,79,0.784,80,1.434,81,0.556,82,0.373,83,0.556,84,0.373,85,0.556,86,0.373,87,0.556,88,0.373,89,0.556,90,1.263,91,0.334,92,0.505,93,0.556,94,0.018,95,0.018,133,3.773,138,1.397,139,1.397,164,0.671,167,0.513,178,0.883,186,0.777,189,0.556,192,1.52,195,1.145,212,1.286,215,2.796,221,0.855,257,1.032,260,2.551,264,2.953,296,2.618,297,2.59,334,1.032,343,1.032,347,2.149,348,2.37,349,1.52,350,1.52,351,1.52,352,1.893,354,1.689,357,1.842,358,1.706,362,1.852,363,1.231,371,1.397,373,1.134,379,0.988,382,0.988,392,1.893,393,1.231,394,1.231,495,2.149,499,2.149,502,2.079,541,1.231,542,2.491,551,1.397,569,1.619,580,3.678,588,1.397,625,1.619,626,2.307,641,1.619,652,1.619,659,1.397,671,2.491,689,4.373,690,1.397,691,3.035,692,2.491,693,3.407,694,3.407,695,3.01,696,3.668,697,4.118,698,2.491,699,1.957,700,3.01,701,3.01,702,3.01,703,4.118,704,1.957,705,3.01,706,4.118,707,5.046,708,3.01,709,4.118,710,2.491,711,1.957,712,3.01,713,3.01,714,3.01,715,1.957,716,1.957,717,3.035,718,2.491,719,2.491,720,2.491,721,2.149,722,1.619,723,3.01,724,1.957,725,1.957,726,3.01,727,3.01,728,3.01,729,1.619,730,1.957,731,1.957,732,4.445,733,1.957,734,3.01,735,3.01,736,1.957,737,1.957,738,1.957,739,3.668,740,3.01,741,1.957,742,4.889,743,3.01,744,1.957,745,1.619,746,1.957,747,1.957,748,1.957,749,4.118,750,1.957,751,1.957,752,1.957,753,1.957,754,1.619,755,1.619,756,1.957,757,1.957,758,1.619,759,1.957,760,3.01,761,2.491,762,3.01,763,1.957,764,1.957,765,1.957]],["title/components/RegisterComponent.html",[0,0.018,82,0.576]],["body/components/RegisterComponent.html",[0,0.029,1,0.489,2,0.259,3,0.22,4,0.729,5,0.729,6,0.729,7,0.729,8,0.146,10,0.662,11,1.526,12,1.516,14,1.046,16,1.046,18,0.22,19,0.701,20,0.734,21,1.709,22,1.387,25,0.301,27,1.416,28,1.112,30,0.652,32,0.389,33,0.037,34,0.551,35,0.444,36,0.389,38,1.491,41,0.551,42,0.301,43,0.967,46,0.967,47,0.22,48,0.111,50,1.614,53,2.629,54,1.954,57,1.345,59,0.601,60,1.046,61,1.046,62,0.701,63,1.337,64,0.729,65,0.729,66,0.489,67,0.729,68,0.489,69,0.729,70,0.489,71,0.438,72,1.224,73,0.489,74,0.493,75,0.489,76,0.729,77,0.489,78,0.729,79,0.489,80,0.729,81,0.729,82,0.896,83,0.729,84,0.489,85,0.729,86,0.489,87,0.729,88,0.489,89,0.729,90,0.729,91,0.438,92,0.662,93,0.729,94,0.022,95,0.022,120,0.729,152,3.134,155,3.596,167,0.628,170,1.779,178,0.911,186,0.951,187,0.88,189,0.729,195,1.345,212,1.469,221,1.224,264,1.614,334,1.263,337,1.063,338,1.526,373,1.623,374,2.174,376,1.859,441,1.832,481,1.832,597,4.123,598,3.702,599,3.359,601,2.124,609,2.629,610,3.047,621,1.832,622,2.124,623,3.047,624,2.316,626,1.614,628,2.124,629,2.124,631,1.832,632,2.124,633,2.124,634,2.124,635,2.124,636,1.832,710,2.124,766,2.124,767,4.307,768,3.682,769,5.186,770,4.705,771,4.705,772,3.682,773,2.566,774,2.566,775,2.566,776,2.566,777,2.566,778,2.566,779,2.566,780,4.307,781,4.307,782,2.566,783,3.682,784,3.682,785,2.566,786,2.566,787,3.682,788,2.566,789,2.566,790,2.566,791,2.566,792,2.566,793,2.566,794,2.566,795,2.566,796,2.566,797,2.566,798,2.566,799,3.682,800,2.566,801,2.566,802,2.566,803,2.566,804,2.566,805,2.566]],["title/injectables/ResponsiveService.html",[27,0.859,183,1.038]],["body/injectables/ResponsiveService.html",[2,0.425,3,0.36,8,0.239,13,2.124,18,0.36,19,0.973,20,0.939,25,0.645,27,1.453,30,0.671,33,0.037,35,0.36,41,0.493,42,0.493,47,0.36,48,0.183,94,0.03,95,0.03,167,0.872,178,0.717,181,2.014,183,1.889,185,2.361,189,1.696,425,4.741,806,3.481,807,5.73,808,5.73,809,5.112,810,4.206,811,4.206,812,4.206,813,4.206,814,4.206,815,4.206]],["title/injectables/RestService.html",[28,0.781,183,1.038]],["body/injectables/RestService.html",[2,0.3,3,0.255,8,0.169,13,1.5,18,0.255,19,0.777,20,1.069,21,1.019,24,1.667,25,0.348,28,1.053,30,0.699,32,0.762,33,0.037,34,0.588,35,0.43,36,0.762,38,1.053,39,2.567,40,2.291,41,0.588,42,0.348,47,0.255,48,0.129,74,0.705,94,0.024,95,0.024,128,2.458,148,1.869,152,2.567,155,2.567,167,0.696,178,1.049,183,1.599,185,1.667,187,1.019,189,1.544,192,2.252,218,2.913,248,1.119,264,3.157,343,1.019,502,1.5,551,2.121,552,2.458,582,2.121,816,2.458,817,5.019,818,5.019,819,5.019,820,5.019,821,5.019,822,5.019,823,5.019,824,5.019,825,4.081,826,4.153,827,2.971,828,5.019,829,4.081,830,4.081,831,2.971,832,2.971,833,2.971,834,2.971,835,2.971,836,2.971,837,4.081,838,2.971,839,4.081,840,2.971,841,4.081,842,2.971,843,2.971,844,4.081,845,2.971,846,4.081,847,2.971,848,2.971,849,2.971,850,2.971,851,2.458,852,2.121,853,2.971,854,4.081,855,2.971,856,4.081,857,2.971,858,5.019,859,2.971,860,2.971,861,2.971,862,2.971,863,2.971,864,2.971,865,2.971]],["title/components/SearchComponent.html",[0,0.018,84,0.576]],["body/components/SearchComponent.html",[0,0.028,1,0.373,2,0.198,3,0.168,4,0.557,5,0.557,6,0.557,7,0.557,8,0.112,10,0.506,11,1.457,12,1.443,14,0.856,16,0.856,18,0.353,19,0.574,20,0.703,22,1.676,25,0.23,28,1.213,29,0.777,30,0.68,32,0.557,33,0.038,34,0.55,35,0.479,36,0.557,38,1.521,39,2.593,40,2.968,41,0.483,42,0.23,44,0.557,45,0.557,46,0.739,47,0.168,48,0.085,49,0.99,54,0.739,59,0.459,60,0.856,61,0.856,62,0.574,63,1.335,64,0.557,65,0.557,66,0.373,67,0.557,68,0.373,69,0.557,70,0.373,71,0.801,72,1.043,73,0.373,74,0.552,75,0.373,76,0.557,77,0.373,78,0.557,79,0.373,80,0.557,81,0.557,82,0.373,83,0.557,84,0.785,85,0.557,86,0.373,87,1.551,88,0.373,89,0.557,90,0.557,91,0.334,92,0.506,93,0.557,94,0.018,95,0.018,164,0.672,167,0.514,178,0.917,181,1.259,186,0.778,189,1.502,192,1.708,195,1.147,212,1.287,214,1.1,221,1.335,225,2.67,248,0.739,257,1.678,260,1.677,287,1.622,289,1.622,291,1.622,293,1.259,328,1.622,329,2.494,343,1.259,357,0.812,370,1.4,373,0.739,374,0.99,380,1.1,382,0.99,402,4.048,409,1.4,410,2.943,483,1.1,502,2.372,534,2.943,562,1.4,852,1.4,866,1.622,867,3.672,868,3.014,869,4.122,870,4.122,871,4.122,872,4.122,873,4.122,874,4.122,875,4.122,876,4.122,877,3.014,878,3.014,879,3.672,880,3.014,881,1.96,882,1.96,883,1.96,884,1.96,885,1.96,886,1.96,887,1.96,888,1.96,889,1.96,890,1.96,891,1.96,892,1.96,893,1.96,894,3.014,895,1.96,896,3.014,897,1.96,898,1.96,899,3.014,900,1.96,901,1.96,902,1.96,903,1.96,904,1.96,905,1.96,906,1.96,907,1.622,908,1.96,909,1.96,910,4.449,911,1.96,912,1.96,913,1.96,914,1.96,915,1.96,916,1.96,917,1.96,918,1.96,919,1.96,920,1.96,921,1.96,922,1.96,923,3.014,924,3.014,925,1.622,926,1.96,927,2.494,928,4.449,929,1.96,930,1.96,931,1.96,932,1.96,933,3.014,934,1.96,935,1.96,936,1.96,937,3.014,938,1.96,939,1.96,940,1.96,941,1.96,942,1.96,943,1.96,944,1.96,945,1.96,946,1.96,947,1.96,948,1.96,949,1.96,950,1.96,951,1.96,952,1.96,953,1.96,954,1.96,955,1.96,956,3.672,957,1.96,958,3.672,959,1.96,960,1.96,961,1.96,962,1.96,963,1.96,964,1.96,965,1.4,966,1.96,967,1.96,968,1.96,969,3.014,970,1.96,971,1.96,972,1.96,973,1.96,974,1.96,975,1.96,976,1.96,977,1.96]],["title/components/SearchEntryListComponent.html",[0,0.018,86,0.576]],["body/components/SearchEntryListComponent.html",[0,0.031,1,0.576,2,0.306,3,0.259,4,0.86,5,0.86,6,0.86,7,0.86,8,0.172,10,0.781,11,1.562,12,1.554,14,1.174,16,1.174,18,0.259,19,0.787,20,0.705,25,0.354,28,0.781,29,1.12,30,0.592,32,0.627,33,0.037,34,0.62,35,0.403,36,0.627,41,0.62,42,0.354,44,0.86,45,0.86,46,1.14,47,0.259,48,0.131,49,1.528,57,1.291,59,0.708,60,1.174,61,1.174,62,0.787,63,1.618,64,0.86,65,0.86,66,0.576,67,0.86,68,0.576,69,0.86,70,0.576,71,0.516,72,1.337,73,0.576,74,0.831,75,0.576,76,0.86,77,0.576,78,0.86,79,0.576,80,0.86,81,0.86,82,0.576,83,0.86,84,0.576,85,0.86,86,0.963,87,1.618,88,0.576,89,0.86,90,0.86,91,0.516,92,0.781,93,0.86,94,0.024,95,0.024,120,0.86,136,3.78,167,0.705,170,1.919,178,0.705,186,1.067,189,0.86,195,1.47,212,1.58,213,3.42,221,1.174,248,1.14,266,2.504,305,2.6,334,1.418,343,1.038,344,1.699,357,1.254,358,1.713,362,2.087,531,1.904,532,3.36,533,2.951,537,2.504,540,2.504,570,2.504,572,2.504,579,2.504,907,2.504,965,2.161,978,4.382,979,3.026,980,4.133,981,3.026,982,3.026,983,4.133,984,4.133,985,4.133,986,3.026,987,3.026,988,3.026]],["title/injectables/SharedVarsService.html",[29,0.64,183,1.038]],["body/injectables/SharedVarsService.html",[2,0.268,3,0.228,8,0.151,13,1.342,18,0.228,19,0.999,20,1.055,22,1.422,25,0.311,28,1.234,29,0.799,30,0.686,32,0.666,33,0.037,34,0.514,35,0.498,36,0.666,38,1.134,41,0.56,42,0.311,47,0.228,48,0.115,71,0.749,74,0.808,94,0.022,95,0.022,164,1.295,167,0.644,178,0.895,181,1.506,183,1.506,185,1.492,187,0.912,214,1.492,221,1.073,225,2.55,248,1.001,257,1.892,260,2.676,293,1.295,336,2.695,340,2.695,376,1.906,409,2.695,410,3.605,442,1.897,495,2.695,499,1.897,541,1.672,592,3.124,598,3.413,609,1.897,720,3.124,721,2.695,722,2.199,729,2.199,826,3.956,927,2.199,989,4.886,990,2.199,991,4.781,992,4.781,993,4.781,994,4.781,995,4.781,996,4.781,997,4.781,998,3.775,999,4.781,1000,3.775,1001,3.775,1002,3.775,1003,2.657,1004,2.657,1005,3.775,1006,3.775,1007,3.775,1008,3.775,1009,2.657,1010,2.657,1011,3.775,1012,2.657,1013,2.657,1014,2.657,1015,2.657,1016,2.657,1017,2.657,1018,2.657,1019,2.657,1020,2.657,1021,3.775,1022,2.657,1023,3.775,1024,2.657,1025,2.657,1026,2.657,1027,2.657,1028,2.657,1029,2.657,1030,3.775,1031,3.775,1032,2.657,1033,3.775,1034,2.657,1035,3.775,1036,2.657,1037,3.775,1038,2.657,1039,2.657,1040,2.657,1041,2.657,1042,2.657]],["title/components/WriteMoodComponent.html",[0,0.018,88,0.576]],["body/components/WriteMoodComponent.html",[0,0.027,1,0.407,2,0.216,3,0.183,4,0.607,5,1.38,6,0.607,7,0.607,8,0.122,10,0.552,11,1.48,12,1.467,14,0.914,16,0.914,18,0.183,19,0.613,20,0.66,21,1.585,22,0.805,23,1.625,24,2.418,25,0.25,27,1.313,28,0.999,29,0.819,30,0.622,32,0.324,33,0.037,34,0.505,35,0.432,36,0.324,38,1.37,41,0.59,42,0.25,43,0.805,44,0.607,45,0.607,46,0.805,47,0.183,48,0.093,51,1.625,54,1.83,56,1.785,57,0.667,59,0.5,60,0.914,61,1.224,62,0.613,63,1.224,64,0.607,65,0.607,66,0.407,67,0.607,68,0.407,69,0.607,70,0.407,71,0.735,72,1.1,73,0.407,74,0.577,75,0.407,76,0.607,77,0.407,78,0.607,79,0.407,80,0.607,81,0.607,82,0.407,83,0.607,84,0.407,85,0.607,86,0.407,87,0.607,88,0.82,89,1.537,90,1.313,91,0.364,92,0.552,93,0.607,94,0.019,95,0.019,116,3.861,120,0.607,164,1.104,167,0.549,170,1.729,178,0.828,186,0.831,187,0.733,188,1.525,189,0.607,195,1.209,212,1.345,214,1.199,221,0.914,225,1.079,248,0.805,257,1.328,260,2.368,293,0.733,334,1.328,337,1.785,338,2.199,339,1.806,343,1.104,344,1.806,345,2.024,348,2.452,349,1.625,350,1.625,351,1.079,354,1.806,357,1.604,358,1.785,362,2.68,365,1.344,367,1.344,368,3.083,369,2.173,373,0.805,375,2.024,376,1.079,378,1.525,379,1.079,381,1.768,382,1.625,394,1.344,441,1.525,442,1.525,471,1.525,474,1.768,483,1.199,484,1.525,486,1.344,498,1.768,502,2.175,534,1.525,541,1.344,543,4.171,544,2.024,547,1.344,562,1.525,566,2.663,582,1.525,588,1.525,599,3.076,624,1.344,626,2.024,636,2.764,653,1.768,659,1.525,660,2.663,676,1.768,679,3.203,683,1.768,690,1.525,691,3.203,692,2.663,693,3.565,694,3.565,698,1.768,717,1.768,718,3.203,719,3.203,754,1.768,755,1.768,758,2.663,851,1.768,852,1.525,925,1.768,965,2.297,1043,4.475,1044,4.308,1045,3.218,1046,2.137,1047,2.137,1048,2.137,1049,2.137,1050,2.137,1051,2.137,1052,2.137,1053,3.218,1054,2.137,1055,3.218,1056,3.218,1057,3.218,1058,3.218,1059,2.137,1060,2.137,1061,2.137,1062,2.137,1063,3.218,1064,2.137,1065,2.137,1066,2.137,1067,2.137,1068,2.137,1069,3.218,1070,2.137,1071,2.137,1072,3.218,1073,3.218,1074,3.218,1075,3.218,1076,2.137,1077,2.137,1078,2.137,1079,2.137,1080,2.137,1081,2.137]],["title/coverage.html",[1082,3.419]],["body/coverage.html",[0,0.036,1,0.689,8,0.206,9,2.994,27,1.028,28,0.934,29,0.765,33,0.037,35,0.31,48,0.202,62,0.689,66,0.689,68,0.689,70,0.689,71,0.617,73,0.689,74,0.689,75,0.689,77,0.689,79,0.689,82,0.689,84,0.689,86,0.689,88,0.689,91,0.617,94,0.027,95,0.027,116,2.583,125,2.583,131,2.583,133,2.583,136,2.583,183,1.764,194,2.994,257,1.241,293,2.149,400,2.994,401,2.994,422,2.994,508,2.994,530,2.994,531,3.235,549,2.994,567,2.994,593,2.994,627,2.994,637,2.994,689,2.994,690,3.321,766,2.994,806,2.994,816,2.994,866,2.994,978,2.994,989,2.994,990,2.994,1043,2.994,1082,2.994,1083,3.617,1084,3.617,1085,3.617,1086,5.143,1087,3.617,1088,4.652,1089,4.652,1090,3.617,1091,3.617,1092,3.617,1093,4.652,1094,4.652,1095,3.617,1096,3.617,1097,3.617,1098,3.617,1099,2.994,1100,3.876,1101,3.85,1102,5.429,1103,2.994,1104,3.85,1105,2.994,1106,2.994,1107,3.617,1108,3.617]],["title/dependencies.html",[98,2.289,1109,2.524]],["body/dependencies.html",[8,0.237,33,0.037,42,0.487,94,0.03,95,0.03,98,2.615,100,2.967,110,4.2,111,3.623,120,1.181,138,3.623,139,2.967,143,3.439,184,2.967,511,3.439,745,3.439,1110,4.156,1111,6.129,1112,4.156,1113,4.156,1114,4.156,1115,4.156,1116,4.156,1117,5.075,1118,5.075,1119,4.156,1120,4.156,1121,4.156,1122,4.156,1123,4.156,1124,4.156,1125,4.156,1126,4.156,1127,4.156,1128,4.156,1129,4.156,1130,4.156,1131,4.156,1132,4.156,1133,4.156,1134,4.156,1135,4.156,1136,4.156,1137,3.439,1138,4.156,1139,4.156,1140,4.156]],["title/index.html",[18,0.216,1141,2.524,1142,2.524]],["body/index.html",[0,0.032,3,0.348,8,0.231,12,1.048,33,0.029,34,0.475,94,0.029,95,0.029,107,2.898,257,1.392,307,3.359,493,3.359,496,3.359,638,3.359,721,3.571,1137,3.359,1143,4.06,1144,5.002,1145,5.66,1146,5.422,1147,5.422,1148,4.06,1149,4.06,1150,4.06,1151,5.998,1152,5.998,1153,4.06,1154,4.06,1155,4.06,1156,4.06,1157,4.06,1158,4.06,1159,4.06,1160,5.422,1161,4.06,1162,5.813,1163,4.06,1164,4.06,1165,4.06,1166,4.06,1167,4.06,1168,4.06,1169,3.359,1170,5.002,1171,5.813,1172,5.002,1173,5.002,1174,4.06,1175,5.66,1176,4.06,1177,4.06,1178,4.06,1179,5.422,1180,4.06]],["title/modules.html",[96,2.319]],["body/modules.html",[33,0.033,94,0.033,95,0.033,96,2.735,97,3.065,111,3.478,1181,4.872,1182,4.872,1183,4.872]],["title/overview.html",[1184,3.419]],["body/overview.html",[0,0.023,1,1.132,33,0.037,47,0.334,48,0.169,59,0.911,62,0.741,66,1.013,68,1.013,70,1.013,73,1.013,75,1.013,77,1.013,79,1.013,82,1.013,84,1.013,86,1.013,88,1.013,91,0.907,94,0.029,95,0.029,96,2.736,97,4.006,98,2.449,99,3.222,100,2.78,101,2.78,102,3.222,103,3.222,104,3.222,105,4.034,106,3.222,107,2.78,165,2.185,183,1.335,293,1.335,308,3.066,761,4.034,1184,3.222,1185,3.893,1186,3.893]],["title/routes.html",[119,2.95]],["body/routes.html",[33,0.033,94,0.033,95,0.033,119,3.519]],["title/miscellaneous/variables.html",[1100,2.598,1187,2.089]],["body/miscellaneous/variables.html",[18,0.377,33,0.037,35,0.481,39,3.533,40,3.153,94,0.031,95,0.031,164,1.51,192,2.177,1099,3.642,1100,3.142,1101,4.992,1103,3.642,1104,3.642,1105,4.648,1106,4.648,1169,4.348,1187,3.642,1188,5.254,1189,4.401,1190,4.401,1191,4.401,1192,4.401,1193,5.817]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":293,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1",{"_index":763,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["0.2",{"_index":588,"title":{},"body":{"components/EntryListComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["0.4",{"_index":548,"title":{},"body":{"components/EmotionListComponent.html":{}}}],["0.5",{"_index":668,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.8.26",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":355,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0/1",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":544,"title":{},"body":{"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["0vw",{"_index":672,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1",{"_index":308,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}],["1,parseint(arr[0",{"_index":962,"title":{},"body":{"components/SearchComponent.html":{}}}],["1.13.2",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["1.14.5",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["1.1em",{"_index":475,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1.25em",{"_index":546,"title":{},"body":{"components/EmotionListComponent.html":{}}}],["1.2em",{"_index":485,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1.3em",{"_index":762,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["1.5px",{"_index":1075,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["1.8em",{"_index":364,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{}}}],["1.9.1",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":666,"title":{},"body":{"components/NavigationComponent.html":{}}}],["100",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WriteMoodComponent.html":{}}}],["100px",{"_index":804,"title":{},"body":{"components/RegisterComponent.html":{}}}],["100vh",{"_index":687,"title":{},"body":{"components/NavigationComponent.html":{}}}],["100vw",{"_index":673,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10px",{"_index":362,"title":{},"body":{"components/CalendarComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["11px",{"_index":398,"title":{},"body":{"components/CalendarComponent.html":{}}}],["12",{"_index":1185,"title":{},"body":{"overview.html":{}}}],["130px",{"_index":675,"title":{},"body":{"components/NavigationComponent.html":{}}}],["14",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":481,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["15px",{"_index":382,"title":{},"body":{"components/CalendarComponent.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["2",{"_index":761,"title":{},"body":{"components/ReadMoodComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":472,"title":{},"body":{"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{}}}],["2/10",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["2/14",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["200px",{"_index":683,"title":{},"body":{"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["20pt",{"_index":1078,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["20px",{"_index":380,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/SearchComponent.html":{}}}],["23px",{"_index":477,"title":{},"body":{"components/DashboardComponent.html":{}}}],["25",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["250px",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["25px",{"_index":482,"title":{},"body":{"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{}}}],["2em",{"_index":381,"title":{},"body":{"components/CalendarComponent.html":{},"components/WriteMoodComponent.html":{}}}],["2px",{"_index":371,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{}}}],["3",{"_index":1186,"title":{},"body":{"overview.html":{}}}],["3.1.10",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["3000",{"_index":846,"title":{},"body":{"injectables/RestService.html":{}}}],["30px",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{}}}],["333333",{"_index":660,"title":{},"body":{"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["35",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["35px",{"_index":359,"title":{},"body":{"components/CalendarComponent.html":{}}}],["37.5",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["372px",{"_index":396,"title":{},"body":{"components/CalendarComponent.html":{}}}],["380px",{"_index":399,"title":{},"body":{"components/CalendarComponent.html":{}}}],["3px",{"_index":484,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["4.1.3",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["4.16.4",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["400px",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{},"components/ReadMoodComponent.html":{}}}],["40px",{"_index":370,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{},"components/SearchComponent.html":{}}}],["410px",{"_index":388,"title":{},"body":{"components/CalendarComponent.html":{}}}],["42.5",{"_index":805,"title":{},"body":{"components/RegisterComponent.html":{}}}],["420px",{"_index":335,"title":{},"body":{"components/CalendarComponent.html":{}}}],["4a96d3",{"_index":339,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["4d4d4d",{"_index":353,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{}}}],["4px",{"_index":585,"title":{},"body":{"components/EntryListComponent.html":{}}}],["5",{"_index":800,"title":{},"body":{"components/RegisterComponent.html":{}}}],["50",{"_index":375,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["50%,0",{"_index":385,"title":{},"body":{"components/CalendarComponent.html":{}}}],["50px",{"_index":659,"title":{},"body":{"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["530px",{"_index":390,"title":{},"body":{"components/CalendarComponent.html":{}}}],["550px",{"_index":803,"title":{},"body":{"components/RegisterComponent.html":{}}}],["5px",{"_index":758,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["6.0.0",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":1149,"title":{},"body":{"index.html":{}}}],["60px",{"_index":679,"title":{},"body":{"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["620px",{"_index":802,"title":{},"body":{"components/RegisterComponent.html":{}}}],["666666",{"_index":680,"title":{},"body":{"components/NavigationComponent.html":{}}}],["6px",{"_index":686,"title":{},"body":{"components/NavigationComponent.html":{}}}],["70",{"_index":986,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["74px",{"_index":684,"title":{},"body":{"components/NavigationComponent.html":{}}}],["7px",{"_index":384,"title":{},"body":{"components/CalendarComponent.html":{}}}],["80",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["800px",{"_index":387,"title":{},"body":{"components/CalendarComponent.html":{}}}],["80px",{"_index":682,"title":{},"body":{"components/NavigationComponent.html":{}}}],["80vw",{"_index":669,"title":{},"body":{"components/NavigationComponent.html":{}}}],["85vh",{"_index":987,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["8px",{"_index":383,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{}}}],["900",{"_index":813,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["_elementref",{"_index":408,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["_id",{"_index":509,"title":{},"body":{"classes/Emotion.html":{},"classes/Entry.html":{}}}],["a.name.tolocalelowercase().localecompare(b.name.tolocalelowercas",{"_index":529,"title":{},"body":{"classes/Emotion.html":{}}}],["aaa",{"_index":480,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aaaaaa",{"_index":1074,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["absolut",{"_index":374,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["activ",{"_index":671,"title":{},"body":{"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{}}}],["activatedroutesnapshot",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["actual_compon",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["afterviewinit",{"_index":1051,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["align",{"_index":344,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["alignleft",{"_index":988,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["all",{"_index":713,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["amount",{"_index":220,"title":{},"body":{"components/CalendarComponent.html":{}}}],["angular",{"_index":1146,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"injectables/RestService.html":{}}}],["angular/compil",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"dependencies.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"index.html":{}}}],["app.compon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["appclickoutsid",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":97,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["argument",{"_index":412,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["arr",{"_index":959,"title":{},"body":{"components/SearchComponent.html":{}}}],["array",{"_index":260,"title":{},"body":{"components/CalendarComponent.html":{},"classes/Emotion.html":{},"classes/Entry.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["array(5",{"_index":251,"title":{},"body":{"components/CalendarComponent.html":{}}}],["array(7",{"_index":253,"title":{},"body":{"components/CalendarComponent.html":{}}}],["array).filter((entri",{"_index":922,"title":{},"body":{"components/SearchComponent.html":{}}}],["artifact",{"_index":1163,"title":{},"body":{"index.html":{}}}],["async",{"_index":1008,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["auf",{"_index":792,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth/auth.guard",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/data.guard",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":144,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["auto",{"_index":394,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["automat",{"_index":1155,"title":{},"body":{"index.html":{}}}],["avaiablenegativeemot",{"_index":991,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["avaiablepositiveemot",{"_index":992,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["avaibl",{"_index":1005,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["aviablelist",{"_index":712,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["aviablelist.filter(",{"_index":748,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["background",{"_index":337,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/WriteMoodComponent.html":{}}}],["bad",{"_index":467,"title":{},"body":{"components/DashboardComponent.html":{}}}],["berprüfen",{"_index":794,"title":{},"body":{"components/RegisterComponent.html":{}}}],["better",{"_index":906,"title":{},"body":{"components/SearchComponent.html":{}}}],["between",{"_index":651,"title":{},"body":{"components/NavigationComponent.html":{}}}],["black",{"_index":1081,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["block",{"_index":367,"title":{},"body":{"components/CalendarComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["blue",{"_index":336,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"injectables/SharedVarsService.html":{}}}],["bold",{"_index":474,"title":{},"body":{"components/DashboardComponent.html":{},"components/WriteMoodComponent.html":{}}}],["boolean",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"injectables/ResponsiveService.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{}}}],["boolean,id",{"_index":522,"title":{},"body":{"classes/Emotion.html":{}}}],["bootstrap",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":368,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["bot",{"_index":586,"title":{},"body":{"components/EntryListComponent.html":{}}}],["bottom",{"_index":379,"title":{},"body":{"components/CalendarComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["brows",{"_index":1183,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":658,"title":{},"body":{"components/NavigationComponent.html":{}}}],["bug",{"_index":650,"title":{},"body":{"components/NavigationComponent.html":{}}}],["build",{"_index":1162,"title":{},"body":{"index.html":{}}}],["button",{"_index":653,"title":{},"body":{"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["button:hov",{"_index":1080,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["cal",{"_index":346,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/NavigationComponent.html":{}}}],["calendar'},{'nam",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["calendar.component.css",{"_index":196,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":197,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcol",{"_index":198,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcompon",{"_index":66,"title":{"components/CalendarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarrow",{"_index":199,"title":{},"body":{"components/CalendarComponent.html":{}}}],["canactiv",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["canactivate(next",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["catcherror",{"_index":847,"title":{},"body":{"injectables/RestService.html":{}}}],["center",{"_index":345,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["chang",{"_index":1157,"title":{},"body":{"index.html":{}}}],["changemonth",{"_index":203,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(amount",{"_index":217,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changeyear",{"_index":204,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changeyear(amount",{"_index":222,"title":{},"body":{"components/CalendarComponent.html":{}}}],["check",{"_index":493,"title":{},"body":{"guards/DataGuard.html":{},"index.html":{}}}],["checklogin",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["circl",{"_index":479,"title":{},"body":{"components/DashboardComponent.html":{}}}],["class",{"_index":48,"title":{"classes/Emotion.html":{},"classes/Entry.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes/emot",{"_index":541,"title":{},"body":{"components/EmotionListComponent.html":{},"components/ReadMoodComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["classes/entri",{"_index":248,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EntryListComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["cli",{"_index":1147,"title":{},"body":{"index.html":{}}}],["click",{"_index":760,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["clickedinsid",{"_index":418,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["clickoutsidedirect",{"_index":91,"title":{"directives/ClickOutsideDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1158,"title":{},"body":{"index.html":{}}}],["col",{"_index":342,"title":{},"body":{"components/CalendarComponent.html":{}}}],["collect",{"_index":701,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["color",{"_index":338,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/WriteMoodComponent.html":{}}}],["commitmood",{"_index":1072,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["components/calendar/calendar.compon",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["components/dashboard/dashboard.compon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["components/emot",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["components/entri",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login//login.compon",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navigation/navigation.compon",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["components/read",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["components/register/register.compon",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["components/search",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["components/search/search.compon",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["components/writ",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('init",{"_index":1060,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["console.log(`regist",{"_index":798,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(data",{"_index":856,"title":{},"body":{"injectables/RestService.html":{}}}],["console.log(entri",{"_index":577,"title":{},"body":{"components/EntryListComponent.html":{}}}],["console.log(json.stringify(entri",{"_index":1067,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["console.log(output",{"_index":946,"title":{},"body":{"components/SearchComponent.html":{}}}],["console.log(this.d",{"_index":919,"title":{},"body":{"components/SearchComponent.html":{}}}],["console.log(this.emot",{"_index":920,"title":{},"body":{"components/SearchComponent.html":{}}}],["console.log(this.searchtext",{"_index":918,"title":{},"body":{"components/SearchComponent.html":{}}}],["console.log(this.tag",{"_index":921,"title":{},"body":{"components/SearchComponent.html":{}}}],["console.log(valu",{"_index":975,"title":{},"body":{"components/SearchComponent.html":{}}}],["const",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"injectables/RestService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["constructor(_elementref",{"_index":405,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["constructor(d",{"_index":553,"title":{},"body":{"classes/Entry.html":{}}}],["constructor(http",{"_index":827,"title":{},"body":{"injectables/RestService.html":{}}}],["constructor(priv",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["constructor(publ",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["constructor(respons",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["constructor(rest",{"_index":214,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["constructor(rout",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(shar",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["constructor(sharedvar",{"_index":569,"title":{},"body":{"components/EntryListComponent.html":{},"components/ReadMoodComponent.html":{}}}],["constructor(typ",{"_index":513,"title":{},"body":{"classes/Emotion.html":{}}}],["constructor(var",{"_index":979,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["contain",{"_index":664,"title":{},"body":{"components/NavigationComponent.html":{}}}],["content",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["context",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cooki",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":322,"title":{},"body":{"components/CalendarComponent.html":{}}}],["coverag",{"_index":1082,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdon",{"_index":550,"title":{},"body":{"classes/Entry.html":{}}}],["cursor",{"_index":764,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["d",{"_index":953,"title":{},"body":{"components/SearchComponent.html":{}}}],["d.foreach((valu",{"_index":957,"title":{},"body":{"components/SearchComponent.html":{}}}],["d15e4b",{"_index":341,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{}}}],["da",{"_index":788,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dark",{"_index":591,"title":{},"body":{"components/EntryListComponent.html":{}}}],["dashboard",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/NavigationComponent.html":{}}}],["dashboard'},{'nam",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["dashboard.component.css",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":68,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":264,"title":{},"body":{"components/CalendarComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{}}}],["data).foreach((el",{"_index":1033,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["data.body).text",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["data['baddaycount",{"_index":448,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data['gooddaycount",{"_index":445,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data['negativeemot",{"_index":461,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data['positiveemot",{"_index":459,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data['tag",{"_index":455,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data['text",{"_index":453,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data['titl",{"_index":457,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dataguard",{"_index":146,"title":{"guards/DataGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/DataGuard.html":{}}}],["date",{"_index":225,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"classes/Entry.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["date(date.getfullyear",{"_index":276,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(e.createdon",{"_index":267,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(entry.createdon",{"_index":927,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{}}}],["date(from",{"_index":273,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(this.selectedd",{"_index":270,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date.getd",{"_index":291,"title":{},"body":{"components/CalendarComponent.html":{},"components/SearchComponent.html":{}}}],["date.getfullyear",{"_index":287,"title":{},"body":{"components/CalendarComponent.html":{},"components/SearchComponent.html":{}}}],["date.getmonth",{"_index":289,"title":{},"body":{"components/CalendarComponent.html":{},"components/SearchComponent.html":{}}}],["date.getmonth()+1,0).getd",{"_index":277,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date.setdate(field",{"_index":284,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date.setfullyear(parseint(arr[2]),parseint(arr[1",{"_index":961,"title":{},"body":{"components/SearchComponent.html":{}}}],["day",{"_index":347,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/ReadMoodComponent.html":{}}}],["daycount",{"_index":200,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daysinmonth",{"_index":205,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daysinmonth(d",{"_index":224,"title":{},"body":{"components/CalendarComponent.html":{}}}],["daytyp",{"_index":998,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["daytype(entri",{"_index":1002,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["dddddd",{"_index":590,"title":{},"body":{"components/EntryListComponent.html":{}}}],["declar",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["delet",{"_index":903,"title":{},"body":{"components/SearchComponent.html":{}}}],["depend",{"_index":98,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":746,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["descript",{"_index":711,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["desktop",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["dev",{"_index":1153,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1150,"title":{},"body":{"index.html":{}}}],["die",{"_index":706,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["direct",{"_index":62,"title":{"directives/ClickOutsideDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives/click",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1161,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1166,"title":{},"body":{"index.html":{}}}],["display",{"_index":365,"title":{},"body":{"components/CalendarComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["dist",{"_index":1165,"title":{},"body":{"index.html":{}}}],["document",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["document:click",{"_index":404,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["document:click(targetel",{"_index":414,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["doppelt",{"_index":793,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dynam",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["d{2}[.]\\\\d{2}.\\\\d{4",{"_index":894,"title":{},"body":{"components/SearchComponent.html":{}}}],["e",{"_index":965,"title":{},"body":{"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["e._id",{"_index":854,"title":{},"body":{"injectables/RestService.html":{}}}],["e.createdon",{"_index":266,"title":{},"body":{"components/CalendarComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["e.createdon.tolocaledatestr",{"_index":984,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["e.foreach((valu",{"_index":968,"title":{},"body":{"components/SearchComponent.html":{}}}],["e.isact",{"_index":1069,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["e.nam",{"_index":542,"title":{},"body":{"components/EmotionListComponent.html":{},"components/ReadMoodComponent.html":{}}}],["e.text",{"_index":985,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["e.titl",{"_index":983,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["e2",{"_index":1176,"title":{},"body":{"index.html":{}}}],["edit",{"_index":535,"title":{},"body":{"components/EmotionListComponent.html":{}}}],["ein",{"_index":783,"title":{},"body":{"components/RegisterComponent.html":{}}}],["eingegeben",{"_index":785,"title":{},"body":{"components/RegisterComponent.html":{}}}],["element",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["element._id",{"_index":1037,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["element.createdon.getd",{"_index":290,"title":{},"body":{"components/CalendarComponent.html":{}}}],["element.createdon.getmonth",{"_index":288,"title":{},"body":{"components/CalendarComponent.html":{}}}],["element.nam",{"_index":1040,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["element.name,fals",{"_index":1036,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["elementref",{"_index":406,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["email",{"_index":769,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emit",{"_index":1006,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["emo",{"_index":939,"title":{},"body":{"components/SearchComponent.html":{}}}],["emo.nam",{"_index":937,"title":{},"body":{"components/SearchComponent.html":{}}}],["emo.name.tolowercas",{"_index":938,"title":{},"body":{"components/SearchComponent.html":{}}}],["emot",{"_index":71,"title":{"classes/Emotion.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{}}}],["emotion(element.typ",{"_index":1035,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["emotion.sortemotions(this.avaiablenegativeemot",{"_index":1041,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["emotion.sortemotions(this.avaiablepositiveemot",{"_index":1038,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["emotionen",{"_index":707,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["emotionlistcompon",{"_index":70,"title":{"components/EmotionListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emotions.sort((a,b",{"_index":528,"title":{},"body":{"classes/Emotion.html":{}}}],["emotiontyp",{"_index":536,"title":{},"body":{"components/EmotionListComponent.html":{}}}],["empti",{"_index":494,"title":{},"body":{"guards/DataGuard.html":{}}}],["enabletrac",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":1175,"title":{},"body":{"index.html":{}}}],["entri",{"_index":74,"title":{"classes/Entry.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{}}}],["entriesperday",{"_index":206,"title":{},"body":{"components/CalendarComponent.html":{}}}],["entriesperday(field",{"_index":227,"title":{},"body":{"components/CalendarComponent.html":{}}}],["entry(data['createdon",{"_index":451,"title":{},"body":{"components/DashboardComponent.html":{}}}],["entry(new",{"_index":442,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["entry.createdon",{"_index":948,"title":{},"body":{"components/SearchComponent.html":{}}}],["entry.negativeemot",{"_index":1064,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["entry.negativeemotions.foreach((emo",{"_index":934,"title":{},"body":{"components/SearchComponent.html":{}}}],["entry.negativeemotions.length",{"_index":507,"title":{},"body":{"guards/DataGuard.html":{}}}],["entry.negativeemotions.map(",{"_index":855,"title":{},"body":{"injectables/RestService.html":{}}}],["entry.positiveemot",{"_index":925,"title":{},"body":{"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["entry.positiveemotions.length",{"_index":506,"title":{},"body":{"guards/DataGuard.html":{}}}],["entry.positiveemotions.map(",{"_index":853,"title":{},"body":{"injectables/RestService.html":{}}}],["entry.tag",{"_index":852,"title":{},"body":{"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["entry.tags.length",{"_index":505,"title":{},"body":{"guards/DataGuard.html":{}}}],["entry.text",{"_index":851,"title":{},"body":{"injectables/RestService.html":{},"components/WriteMoodComponent.html":{}}}],["entry.text.length",{"_index":504,"title":{},"body":{"guards/DataGuard.html":{}}}],["entry.titl",{"_index":582,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/RestService.html":{},"components/WriteMoodComponent.html":{}}}],["entry.title.length",{"_index":503,"title":{},"body":{"guards/DataGuard.html":{}}}],["entry:hov",{"_index":589,"title":{},"body":{"components/EntryListComponent.html":{}}}],["entrylist",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["entrylistcompon",{"_index":73,"title":{"components/EntryListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["environ",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errortext",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["event",{"_index":409,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{}}}],["event.target",{"_index":413,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["eventemitt",{"_index":410,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{}}}],["execut",{"_index":1172,"title":{},"body":{"index.html":{}}}],["export",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"overview.html":{}}}],["express",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["f",{"_index":330,"title":{},"body":{"components/CalendarComponent.html":{}}}],["fals",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"guards/DataGuard.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"miscellaneous/variables.html":{}}}],["famili",{"_index":349,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["fetch",{"_index":720,"title":{},"body":{"components/ReadMoodComponent.html":{},"injectables/SharedVarsService.html":{}}}],["fff",{"_index":391,"title":{},"body":{"components/CalendarComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{}}}],["ffffff",{"_index":667,"title":{},"body":{"components/NavigationComponent.html":{}}}],["field",{"_index":229,"title":{},"body":{"components/CalendarComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filenam",{"_index":743,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["filesav",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/ReadMoodComponent.html":{},"dependencies.html":{}}}],["filesavermodul",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["filesaverservic",{"_index":697,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["filter",{"_index":928,"title":{},"body":{"components/SearchComponent.html":{}}}],["filterd",{"_index":874,"title":{},"body":{"components/SearchComponent.html":{}}}],["filteremot",{"_index":875,"title":{},"body":{"components/SearchComponent.html":{}}}],["filtertag",{"_index":876,"title":{},"body":{"components/SearchComponent.html":{}}}],["finish",{"_index":1007,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["fix",{"_index":649,"title":{},"body":{"components/NavigationComponent.html":{}}}],["flag",{"_index":1168,"title":{},"body":{"index.html":{}}}],["font",{"_index":348,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["formsmodul",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":904,"title":{},"body":{"components/SearchComponent.html":{}}}],["from,to",{"_index":275,"title":{},"body":{"components/CalendarComponent.html":{}}}],["from.setdate(1",{"_index":271,"title":{},"body":{"components/CalendarComponent.html":{}}}],["from.sethours(0,0,0,0",{"_index":272,"title":{},"body":{"components/CalendarComponent.html":{}}}],["fromto",{"_index":261,"title":{},"body":{"components/CalendarComponent.html":{}}}],["full",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":1178,"title":{},"body":{"index.html":{}}}],["gener",{"_index":1145,"title":{},"body":{"index.html":{}}}],["get",{"_index":1141,"title":{"index.html":{}},"body":{}}],["getallentri",{"_index":819,"title":{},"body":{"injectables/RestService.html":{}}}],["getbaddaycount",{"_index":820,"title":{},"body":{"injectables/RestService.html":{}}}],["getemot",{"_index":695,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["getemotions(aviablelist",{"_index":702,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["getgooddaycount",{"_index":821,"title":{},"body":{"injectables/RestService.html":{}}}],["getlastcreatedentri",{"_index":822,"title":{},"body":{"injectables/RestService.html":{}}}],["getmobil",{"_index":808,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["getmonthnam",{"_index":207,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getmonthname(d",{"_index":230,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getmonthname(selectedd",{"_index":326,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getnegativeemot",{"_index":823,"title":{},"body":{"injectables/RestService.html":{}}}],["getpositiveemot",{"_index":824,"title":{},"body":{"injectables/RestService.html":{}}}],["getrang",{"_index":208,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getselecteddayentri",{"_index":209,"title":{},"body":{"components/CalendarComponent.html":{}}}],["getselecteddayentries(field",{"_index":233,"title":{},"body":{"components/CalendarComponent.html":{}}}],["gibt",{"_index":705,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["gleich",{"_index":790,"title":{},"body":{"components/RegisterComponent.html":{}}}],["go",{"_index":496,"title":{},"body":{"guards/DataGuard.html":{},"index.html":{}}}],["good",{"_index":466,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gotoentri",{"_index":568,"title":{},"body":{"components/EntryListComponent.html":{}}}],["gotoentry(entri",{"_index":571,"title":{},"body":{"components/EntryListComponent.html":{}}}],["gray",{"_index":592,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/SharedVarsService.html":{}}}],["greencolor",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["guard",{"_index":165,"title":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{},"overview.html":{}}}],["h3",{"_index":363,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{}}}],["h4",{"_index":470,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavigationComponent.html":{}}}],["hasfieldentri",{"_index":210,"title":{},"body":{"components/CalendarComponent.html":{}}}],["hasfieldentry(field",{"_index":235,"title":{},"body":{"components/CalendarComponent.html":{}}}],["head",{"_index":1071,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["height",{"_index":334,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["help",{"_index":1179,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":393,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{}}}],["hostlisten",{"_index":403,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["hostlistener('document:click",{"_index":416,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["html",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["http",{"_index":830,"title":{},"body":{"injectables/RestService.html":{}}}],["http://localhost:4200",{"_index":1154,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":828,"title":{},"body":{"injectables/RestService.html":{}}}],["httpclientmodul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["i+1",{"_index":581,"title":{},"body":{"components/EntryListComponent.html":{}}}],["id",{"_index":514,"title":{},"body":{"classes/Emotion.html":{}}}],["identifi",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["if(",{"_index":967,"title":{},"body":{"components/SearchComponent.html":{}}}],["if(!clickedinsid",{"_index":420,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["if((data.body).text",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(d",{"_index":955,"title":{},"body":{"components/SearchComponent.html":{}}}],["if(data",{"_index":450,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(date.getfullyear",{"_index":298,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(e._id",{"_index":751,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["if(element.createdon.getfullyear",{"_index":286,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(element.isact",{"_index":1063,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["if(element.negativeemotions.length",{"_index":294,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(element.positiveemotions.length",{"_index":292,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(entry.negativeemotions.length",{"_index":1028,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["if(entry.positiveemotions.length",{"_index":1027,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["if(resdate.getfullyear",{"_index":943,"title":{},"body":{"components/SearchComponent.html":{}}}],["if(t",{"_index":973,"title":{},"body":{"components/SearchComponent.html":{}}}],["if(this.entriesperday(field",{"_index":309,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(this.hasfieldentry(field",{"_index":302,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(this.isempty(this.shared.selectedentri",{"_index":497,"title":{},"body":{"guards/DataGuard.html":{}}}],["if(this.password",{"_index":791,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.responsive.getmobil",{"_index":314,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(this.searchtext.length",{"_index":912,"title":{},"body":{"components/SearchComponent.html":{}}}],["if(this.shared.avaiablepositiveemotions.length",{"_index":1059,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["if(this.shared.loggedin",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(this.sharedvars.selectedentry.negativeemotions.find((v",{"_index":731,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["if(this.sharedvars.selectedentry.positiveemotions.find((v",{"_index":725,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["if(this.usernam",{"_index":786,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(val.createdon.getfullyear",{"_index":324,"title":{},"body":{"components/CalendarComponent.html":{}}}],["if(x",{"_index":933,"title":{},"body":{"components/SearchComponent.html":{}}}],["img",{"_index":378,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["implement",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["initavaiableemot",{"_index":999,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["initializedemot",{"_index":993,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["inject",{"_index":183,"title":{"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"injectables/SharedVarsService.html":{}},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"injectables/SharedVarsService.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":366,"title":{},"body":{"components/CalendarComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{}}}],["input",{"_index":534,"title":{},"body":{"components/EmotionListComponent.html":{},"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["inputsearchtext",{"_index":877,"title":{},"body":{"components/SearchComponent.html":{}}}],["inputsearchtext(text",{"_index":886,"title":{},"body":{"components/SearchComponent.html":{}}}],["inputsearchtext(text:str",{"_index":911,"title":{},"body":{"components/SearchComponent.html":{}}}],["ip",{"_index":817,"title":{},"body":{"injectables/RestService.html":{}}}],["isact",{"_index":510,"title":{},"body":{"classes/Emotion.html":{},"components/NavigationComponent.html":{}}}],["isempti",{"_index":488,"title":{},"body":{"guards/DataGuard.html":{}}}],["isempty(entri",{"_index":491,"title":{},"body":{"guards/DataGuard.html":{}}}],["isfieldtoday",{"_index":211,"title":{},"body":{"components/CalendarComponent.html":{}}}],["isfieldtoday(field",{"_index":237,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ismobil",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/ResponsiveService.html":{}}}],["isstringempti",{"_index":878,"title":{},"body":{"components/SearchComponent.html":{}}}],["isstringempty(text",{"_index":888,"title":{},"body":{"components/SearchComponent.html":{}}}],["ital",{"_index":471,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["january','february','march','april','may','june','july','august','september','october','november','decemb",{"_index":282,"title":{},"body":{"components/CalendarComponent.html":{}}}],["jqueri",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":749,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["karma",{"_index":1174,"title":{},"body":{"index.html":{}}}],["last",{"_index":468,"title":{},"body":{"components/DashboardComponent.html":{}}}],["left",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["legend",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"overview.html":{}}}],["letter",{"_index":754,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["li",{"_index":545,"title":{},"body":{"components/EmotionListComponent.html":{}}}],["lighter",{"_index":352,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/ReadMoodComponent.html":{}}}],["line",{"_index":476,"title":{},"body":{"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{}}}],["list",{"_index":305,"title":{},"body":{"components/CalendarComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["list'},{'nam",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["list.compon",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":532,"title":{},"body":{"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["list.component.html",{"_index":533,"title":{},"body":{"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["list.component.t",{"_index":531,"title":{},"body":{"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/SearchEntryListComponent.html":{},"coverage.html":{}}}],["list.component.ts:11",{"_index":538,"title":{},"body":{"components/EmotionListComponent.html":{}}}],["list.component.ts:12",{"_index":570,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["list.component.ts:14",{"_index":539,"title":{},"body":{"components/EmotionListComponent.html":{}}}],["list.component.ts:16",{"_index":537,"title":{},"body":{"components/EmotionListComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["list.component.ts:17",{"_index":574,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:20",{"_index":540,"title":{},"body":{"components/EmotionListComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["list.component.ts:21",{"_index":573,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:24",{"_index":572,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["list/emot",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/EmotionListComponent.html":{},"coverage.html":{}}}],["list/entri",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["list/search",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/SearchEntryListComponent.html":{},"coverage.html":{}}}],["lmdaytyp",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{}}}],["lmmoodtext",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{}}}],["localhost",{"_index":844,"title":{},"body":{"injectables/RestService.html":{}}}],["loggedin",{"_index":994,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["login",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{}}}],["login'},{'nam",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["login(data",{"_index":837,"title":{},"body":{"injectables/RestService.html":{}}}],["login.component.css",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":75,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logindesktop",{"_index":801,"title":{},"body":{"components/RegisterComponent.html":{}}}],["logout",{"_index":641,"title":{},"body":{"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{}}}],["m",{"_index":327,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mar",{"_index":677,"title":{},"body":{"components/NavigationComponent.html":{}}}],["marg",{"_index":356,"title":{},"body":{"components/CalendarComponent.html":{},"components/EntryListComponent.html":{}}}],["margin",{"_index":358,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["mark",{"_index":723,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["match",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":386,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{}}}],["media",{"_index":395,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mediumturquois",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["method",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["min",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/RegisterComponent.html":{}}}],["miscellan",{"_index":1187,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobil",{"_index":652,"title":{},"body":{"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{}}}],["mobiles",{"_index":807,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["modul",{"_index":96,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["monitor",{"_index":688,"title":{},"body":{"components/NavigationComponent.html":{}}}],["mono",{"_index":662,"title":{},"body":{"components/NavigationComponent.html":{}}}],["month",{"_index":281,"title":{},"body":{"components/CalendarComponent.html":{}}}],["months[date.getmonth",{"_index":283,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["mood'},{'nam",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["mood.compon",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["mood.component.css",{"_index":691,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["mood.component.html",{"_index":692,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["mood.component.t",{"_index":690,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{}}}],["mood.component.ts:103",{"_index":704,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["mood.component.ts:15",{"_index":716,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["mood.component.ts:16",{"_index":698,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["mood.component.ts:17",{"_index":1048,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["mood.component.ts:19",{"_index":1050,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["mood.component.ts:20",{"_index":717,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["mood.component.ts:21",{"_index":1045,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["mood.component.ts:23",{"_index":1049,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["mood.component.ts:35",{"_index":1046,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["mood.component.ts:51",{"_index":1047,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["mood.component.ts:60",{"_index":715,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["mood.component.ts:66",{"_index":699,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["mood/read",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/ReadMoodComponent.html":{},"coverage.html":{}}}],["mood/writ",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{}}}],["moodapp",{"_index":1143,"title":{},"body":{"index.html":{}}}],["moodtext",{"_index":1044,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["more",{"_index":307,"title":{},"body":{"components/CalendarComponent.html":{},"index.html":{}}}],["morgan",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["n",{"_index":742,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"index.html":{}}}],["nav",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["navig",{"_index":638,"title":{},"body":{"components/NavigationComponent.html":{},"index.html":{}}}],["navigation'},{'nam",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["navigation.component.css",{"_index":639,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":640,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcompon",{"_index":77,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nbsp",{"_index":753,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["nbsp;monitor",{"_index":657,"title":{},"body":{"components/NavigationComponent.html":{}}}],["neg",{"_index":297,"title":{},"body":{"components/CalendarComponent.html":{},"guards/DataGuard.html":{},"components/EmotionListComponent.html":{},"components/ReadMoodComponent.html":{}}}],["negativ",{"_index":737,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["negativeemot",{"_index":551,"title":{},"body":{"classes/Entry.html":{},"components/ReadMoodComponent.html":{},"injectables/RestService.html":{}}}],["negday",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{}}}],["negemot",{"_index":693,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["neut",{"_index":295,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{}}}],["new",{"_index":257,"title":{},"body":{"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"classes/Entry.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["ng",{"_index":1152,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":212,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["ngx",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/ReadMoodComponent.html":{},"dependencies.html":{}}}],["none",{"_index":543,"title":{},"body":{"components/EmotionListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["normal",{"_index":663,"title":{},"body":{"components/NavigationComponent.html":{}}}],["null",{"_index":956,"title":{},"body":{"components/SearchComponent.html":{}}}],["number",{"_index":218,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"injectables/RestService.html":{}}}],["object",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["onclick(targetel",{"_index":417,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["oninit",{"_index":195,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["option",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["oswald",{"_index":350,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outlin",{"_index":1073,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["output",{"_index":402,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"components/SearchComponent.html":{}}}],["output.map((entri",{"_index":947,"title":{},"body":{"components/SearchComponent.html":{}}}],["outside.direct",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{}}}],["outside.directive.t",{"_index":401,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"coverage.html":{}}}],["outside.directive.ts:13",{"_index":411,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["outside.directive.ts:16",{"_index":415,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["outside.directive.ts:6",{"_index":407,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["overflow",{"_index":392,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{}}}],["overview",{"_index":1184,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":473,"title":{},"body":{"components/DashboardComponent.html":{}}}],["packag",{"_index":1109,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["panel",{"_index":333,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/NavigationComponent.html":{}}}],["para",{"_index":756,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["param",{"_index":499,"title":{},"body":{"guards/DataGuard.html":{},"components/ReadMoodComponent.html":{},"injectables/SharedVarsService.html":{}}}],["paramet",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["password",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password2",{"_index":796,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwort",{"_index":787,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["po",{"_index":296,"title":{},"body":{"components/CalendarComponent.html":{},"guards/DataGuard.html":{},"components/ReadMoodComponent.html":{}}}],["pointer",{"_index":765,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["popper.j",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":818,"title":{},"body":{"injectables/RestService.html":{}}}],["posday",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{}}}],["posemot",{"_index":694,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["posit",{"_index":373,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["positiv",{"_index":733,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["positiveemot",{"_index":552,"title":{},"body":{"classes/Entry.html":{},"injectables/RestService.html":{}}}],["privat",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/LoginComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["prod",{"_index":1167,"title":{},"body":{"index.html":{}}}],["product",{"_index":1169,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1144,"title":{},"body":{"index.html":{}}}],["promis",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"classes/Emotion.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["protractor",{"_index":1177,"title":{},"body":{"index.html":{}}}],["provid",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"guards/DataGuard.html":{},"overview.html":{}}}],["providedin",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"injectables/SharedVarsService.html":{}}}],["pt",{"_index":661,"title":{},"body":{"components/NavigationComponent.html":{}}}],["public",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"classes/Emotion.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["radiu",{"_index":369,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["react",{"_index":655,"title":{},"body":{"components/NavigationComponent.html":{}}}],["read",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["readm",{"_index":1180,"title":{},"body":{"index.html":{}}}],["readmood",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["readmoodcompon",{"_index":79,"title":{"components/ReadMoodComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["red",{"_index":340,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"injectables/SharedVarsService.html":{}}}],["redirectto",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["regexd",{"_index":869,"title":{},"body":{"components/SearchComponent.html":{}}}],["regexemot",{"_index":870,"title":{},"body":{"components/SearchComponent.html":{}}}],["regextag",{"_index":871,"title":{},"body":{"components/SearchComponent.html":{}}}],["regextext",{"_index":872,"title":{},"body":{"components/SearchComponent.html":{}}}],["regist",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{}}}],["register'},{'nam",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["register(data",{"_index":839,"title":{},"body":{"injectables/RestService.html":{}}}],["register.component.css",{"_index":767,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":768,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercompon",{"_index":82,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerwidth",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["regular",{"_index":1079,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["rel",{"_index":676,"title":{},"body":{"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["reload",{"_index":1156,"title":{},"body":{"index.html":{}}}],["repeatpw",{"_index":770,"title":{},"body":{"components/RegisterComponent.html":{}}}],["requir",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resdat",{"_index":926,"title":{},"body":{"components/SearchComponent.html":{}}}],["resdate.getd",{"_index":945,"title":{},"body":{"components/SearchComponent.html":{}}}],["resdate.getmonth",{"_index":944,"title":{},"body":{"components/SearchComponent.html":{}}}],["resemot",{"_index":924,"title":{},"body":{"components/SearchComponent.html":{}}}],["resemotions.foreach((emo",{"_index":940,"title":{},"body":{"components/SearchComponent.html":{}}}],["resemotions.map((emo",{"_index":936,"title":{},"body":{"components/SearchComponent.html":{}}}],["resemotions.push(emo",{"_index":935,"title":{},"body":{"components/SearchComponent.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resiz",{"_index":1077,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["respons",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{},"components/WriteMoodComponent.html":{}}}],["responsive:responsiveservic",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["responsive:responsiveservice,priv",{"_index":1052,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["responsiveservic",{"_index":27,"title":{"injectables/ResponsiveService.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{}}}],["rest",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["rest.servic",{"_index":1020,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["rest:restservic",{"_index":441,"title":{},"body":{"components/DashboardComponent.html":{},"components/RegisterComponent.html":{},"components/WriteMoodComponent.html":{}}}],["restag",{"_index":923,"title":{},"body":{"components/SearchComponent.html":{}}}],["restags.foreach((tag",{"_index":931,"title":{},"body":{"components/SearchComponent.html":{}}}],["restags.map((tag",{"_index":929,"title":{},"body":{"components/SearchComponent.html":{}}}],["restservic",{"_index":28,"title":{"injectables/RestService.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{}}}],["result",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["right",{"_index":483,"title":{},"body":{"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/DataGuard.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"injectables/SharedVarsService.html":{}}}],["root'},{'nam",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["rout",{"_index":119,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"routes.html":{}}}],["router",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["router,publ",{"_index":576,"title":{},"body":{"components/EntryListComponent.html":{}}}],["router:rout",{"_index":656,"title":{},"body":{"components/NavigationComponent.html":{}}}],["routermodul",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["routetolastmood",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{}}}],["row",{"_index":397,"title":{},"body":{"components/CalendarComponent.html":{}}}],["run",{"_index":1151,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":848,"title":{},"body":{"injectables/RestService.html":{}}}],["s",{"_index":331,"title":{},"body":{"components/CalendarComponent.html":{}}}],["s._id",{"_index":752,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["s?\\\\w",{"_index":899,"title":{},"body":{"components/SearchComponent.html":{}}}],["save",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/WriteMoodComponent.html":{}}}],["saveentri",{"_index":825,"title":{},"body":{"injectables/RestService.html":{}}}],["saveentry(entri",{"_index":841,"title":{},"body":{"injectables/RestService.html":{}}}],["saver",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["saveservic",{"_index":696,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["scaffold",{"_index":1159,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":478,"title":{},"body":{"components/DashboardComponent.html":{}}}],["search",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["search'},{'nam",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["search.component.css",{"_index":867,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":868,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcompon",{"_index":84,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchentri",{"_index":826,"title":{},"body":{"injectables/RestService.html":{},"injectables/SharedVarsService.html":{}}}],["searchentrylistcompon",{"_index":86,"title":{"components/SearchEntryListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchingchang",{"_index":879,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchtext",{"_index":873,"title":{},"body":{"components/SearchComponent.html":{}}}],["seldat",{"_index":311,"title":{},"body":{"components/CalendarComponent.html":{}}}],["seldate.setdate(field",{"_index":312,"title":{},"body":{"components/CalendarComponent.html":{}}}],["select",{"_index":495,"title":{},"body":{"guards/DataGuard.html":{},"components/ReadMoodComponent.html":{},"injectables/SharedVarsService.html":{}}}],["selectedd",{"_index":201,"title":{},"body":{"components/CalendarComponent.html":{}}}],["selecteddate.getfullyear",{"_index":325,"title":{},"body":{"components/CalendarComponent.html":{}}}],["selectedday",{"_index":995,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["selecteddayentri",{"_index":996,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["selectedentri",{"_index":997,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["selectedlist",{"_index":703,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["selectedlist.foreach(",{"_index":750,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["selektiert",{"_index":709,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["serv",{"_index":1137,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server",{"_index":721,"title":{},"body":{"components/ReadMoodComponent.html":{},"injectables/SharedVarsService.html":{},"index.html":{}}}],["servic",{"_index":745,"title":{},"body":{"components/ReadMoodComponent.html":{},"dependencies.html":{}}}],["services/responsive.servic",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/WriteMoodComponent.html":{}}}],["services/rest.servic",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["services/shar",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["set",{"_index":1011,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["setselectedentri",{"_index":1000,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["setselectedentry(entri",{"_index":1009,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["setselectedentry(entry:entri",{"_index":1029,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["share",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/DataGuard.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["shared:sharedvarsservic",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{},"components/WriteMoodComponent.html":{}}}],["sharedvar",{"_index":215,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/ReadMoodComponent.html":{}}}],["sharedvars:sharedvarsservic",{"_index":249,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{}}}],["sharedvarsservic",{"_index":29,"title":{"injectables/SharedVarsService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{}}}],["sharedvarsservice,priv",{"_index":575,"title":{},"body":{"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["sind",{"_index":710,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{}}}],["size",{"_index":354,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["smalldashboard",{"_index":469,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solid",{"_index":372,"title":{},"body":{"components/CalendarComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{}}}],["sortemot",{"_index":512,"title":{},"body":{"classes/Emotion.html":{}}}],["sortemotions(emot",{"_index":519,"title":{},"body":{"classes/Emotion.html":{}}}],["sortemotions(emotions:array",{"_index":527,"title":{},"body":{"classes/Emotion.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"index.html":{}}}],["space",{"_index":755,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["span",{"_index":584,"title":{},"body":{"components/EntryListComponent.html":{},"components/NavigationComponent.html":{}}}],["spec\\.t",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.guard.t",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:15",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:22",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:9",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/data.guard.t",{"_index":487,"title":{},"body":{"guards/DataGuard.html":{}}}],["src/app/auth/data.guard.ts:10",{"_index":489,"title":{},"body":{"guards/DataGuard.html":{}}}],["src/app/auth/data.guard.ts:16",{"_index":490,"title":{},"body":{"guards/DataGuard.html":{}}}],["src/app/auth/data.guard.ts:34",{"_index":492,"title":{},"body":{"guards/DataGuard.html":{}}}],["src/app/classes/emotion.t",{"_index":508,"title":{},"body":{"classes/Emotion.html":{},"coverage.html":{}}}],["src/app/classes/emotion.ts:14",{"_index":520,"title":{},"body":{"classes/Emotion.html":{}}}],["src/app/classes/emotion.ts:2",{"_index":516,"title":{},"body":{"classes/Emotion.html":{}}}],["src/app/classes/emotion.ts:3",{"_index":517,"title":{},"body":{"classes/Emotion.html":{}}}],["src/app/classes/emotion.ts:4",{"_index":518,"title":{},"body":{"classes/Emotion.html":{}}}],["src/app/classes/emotion.ts:5",{"_index":515,"title":{},"body":{"classes/Emotion.html":{}}}],["src/app/classes/entry.t",{"_index":549,"title":{},"body":{"classes/Entry.html":{},"coverage.html":{}}}],["src/app/classes/entry.ts:10",{"_index":554,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/classes/entry.ts:4",{"_index":555,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/classes/entry.ts:5",{"_index":556,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/classes/entry.ts:6",{"_index":558,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/classes/entry.ts:7",{"_index":559,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/classes/entry.ts:8",{"_index":560,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/classes/entry.ts:9",{"_index":557,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/components/calendar/calendar.component.t",{"_index":194,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/components/calendar/calendar.component.ts:101",{"_index":241,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:129",{"_index":234,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:136",{"_index":228,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:15",{"_index":243,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:16",{"_index":242,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:18",{"_index":244,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:19",{"_index":246,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:20",{"_index":247,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:22",{"_index":216,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:24",{"_index":245,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:43",{"_index":239,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:46",{"_index":232,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:55",{"_index":226,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:58",{"_index":219,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:62",{"_index":223,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:66",{"_index":231,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:70",{"_index":236,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/calendar/calendar.component.ts:91",{"_index":238,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.t",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:15",{"_index":439,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:16",{"_index":438,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:18",{"_index":436,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:19",{"_index":437,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:21",{"_index":434,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:23",{"_index":435,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:25",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:27",{"_index":440,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:31",{"_index":432,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:63",{"_index":433,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/emot",{"_index":530,"title":{},"body":{"components/EmotionListComponent.html":{},"coverage.html":{}}}],["src/app/components/entri",{"_index":567,"title":{},"body":{"components/EntryListComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.t",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:13",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:14",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:26",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:40",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navigation/navigation.component.t",{"_index":637,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/navigation/navigation.component.ts:14",{"_index":643,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:15",{"_index":647,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:20",{"_index":645,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:24",{"_index":646,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:29",{"_index":644,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/read",{"_index":689,"title":{},"body":{"components/ReadMoodComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.t",{"_index":766,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:12",{"_index":779,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:13",{"_index":776,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:14",{"_index":777,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:15",{"_index":772,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:17",{"_index":778,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:24",{"_index":773,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:27",{"_index":774,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:47",{"_index":775,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/search",{"_index":978,"title":{},"body":{"components/SearchEntryListComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.t",{"_index":866,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts:13",{"_index":902,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:131",{"_index":883,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:147",{"_index":884,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:15",{"_index":881,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:160",{"_index":885,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:17",{"_index":882,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:18",{"_index":895,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:19",{"_index":897,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:20",{"_index":898,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:21",{"_index":900,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:24",{"_index":892,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:25",{"_index":893,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:26",{"_index":880,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:28",{"_index":901,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:38",{"_index":890,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:42",{"_index":887,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:51",{"_index":889,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:55",{"_index":891,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/writ",{"_index":1043,"title":{},"body":{"components/WriteMoodComponent.html":{},"coverage.html":{}}}],["src/app/directives/click",{"_index":400,"title":{},"body":{"directives/ClickOutsideDirective.html":{},"coverage.html":{}}}],["src/app/services/responsive.service.t",{"_index":806,"title":{},"body":{"injectables/ResponsiveService.html":{},"coverage.html":{}}}],["src/app/services/responsive.service.ts:15",{"_index":810,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/responsive.service.ts:8",{"_index":811,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/responsive.service.ts:9",{"_index":809,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["src/app/services/rest.service.t",{"_index":816,"title":{},"body":{"injectables/RestService.html":{},"coverage.html":{}}}],["src/app/services/rest.service.ts:11",{"_index":845,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:12",{"_index":829,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:17",{"_index":836,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:20",{"_index":835,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:23",{"_index":842,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:35",{"_index":833,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:38",{"_index":832,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:41",{"_index":834,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:44",{"_index":831,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:47",{"_index":843,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:54",{"_index":838,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/rest.service.ts:58",{"_index":840,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/services/shar",{"_index":989,"title":{},"body":{"injectables/SharedVarsService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1142,"title":{"index.html":{}},"body":{}}],["state",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"guards/DataGuard.html":{}}}],["statement",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":511,"title":{},"body":{"classes/Emotion.html":{},"dependencies.html":{}}}],["store",{"_index":1164,"title":{},"body":{"index.html":{}}}],["string",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/LoginComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["string,isact",{"_index":521,"title":{},"body":{"classes/Emotion.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["submit",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WriteMoodComponent.html":{}}}],["subscribe(data",{"_index":797,"title":{},"body":{"components/RegisterComponent.html":{}}}],["substr",{"_index":905,"title":{},"body":{"components/SearchComponent.html":{}}}],["success",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["support",{"_index":1181,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1182,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":304,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{}}}],["t",{"_index":328,"title":{},"body":{"components/CalendarComponent.html":{},"components/SearchComponent.html":{}}}],["t.foreach((valu",{"_index":974,"title":{},"body":{"components/SearchComponent.html":{}}}],["tab",{"_index":670,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tabl",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":502,"title":{},"body":{"guards/DataGuard.html":{},"classes/Entry.html":{},"components/ReadMoodComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["tag.tolowercas",{"_index":930,"title":{},"body":{"components/SearchComponent.html":{}}}],["tagstr",{"_index":740,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["tall",{"_index":757,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["test",{"_index":1171,"title":{},"body":{"index.html":{}}}],["tex",{"_index":501,"title":{},"body":{"guards/DataGuard.html":{}}}],["text",{"_index":343,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["textarea",{"_index":1076,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this._elementref.nativeelement.contains(targetel",{"_index":419,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["this._id",{"_index":526,"title":{},"body":{"classes/Emotion.html":{}}}],["this.appclickoutside.emit(nul",{"_index":421,"title":{},"body":{"directives/ClickOutsideDirective.html":{}}}],["this.avaiablenegativeemot",{"_index":1031,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.avaiablenegativeemotions.push(new",{"_index":1039,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.avaiablepositiveemot",{"_index":1030,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.avaiablepositiveemotions.push(new",{"_index":1034,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.calendarcol",{"_index":252,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendarrow",{"_index":250,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.checklogin",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.createdon",{"_index":561,"title":{},"body":{"classes/Entry.html":{}}}],["this.dat",{"_index":908,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.dates.foreach((d",{"_index":942,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.dates.length",{"_index":950,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.dates.push(d",{"_index":963,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.daycount",{"_index":254,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.daysinmonth(new",{"_index":255,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.daysinmonth(this.selectedd",{"_index":279,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.email",{"_index":780,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.emot",{"_index":909,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.emotions.foreach((x",{"_index":941,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.emotions.length",{"_index":951,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.emotions.push(valu",{"_index":970,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.entri",{"_index":259,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{}}}],["this.entries.filter((v",{"_index":318,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.entries.foreach((el",{"_index":285,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.entries.foreach((v",{"_index":323,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.entries.map(",{"_index":265,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.entry.negativeemot",{"_index":460,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.entry.negativeemotions.length",{"_index":463,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.entry.positiveemot",{"_index":458,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.entry.positiveemotions.length",{"_index":462,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.entry.tag",{"_index":454,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.entry.text",{"_index":452,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.entry.titl",{"_index":456,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.errortext",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filterd",{"_index":915,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.filteremot",{"_index":916,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.filtertag",{"_index":917,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.getemotions(this.sharedvars.avaiablenegativeemotions,this.sharedvars.selectedentry.negativeemotions).foreach(",{"_index":738,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["this.getemotions(this.sharedvars.avaiablepositiveemotions,this.sharedvars.selectedentry.positiveemotions).foreach(",{"_index":736,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["this.getrang",{"_index":262,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.getselecteddayentri",{"_index":269,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.getselecteddayentries(field",{"_index":310,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.http.get(`http://${this.ip}:3000/baddaycount",{"_index":860,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get(`http://${this.ip}:3000/getallentries`,{withcredenti",{"_index":862,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get(`http://${this.ip}:3000/getlastentry`,{withcredenti",{"_index":861,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get(`http://${this.ip}:3000/getnegativeemot",{"_index":850,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get(`http://${this.ip}:3000/getpositiveemot",{"_index":849,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get(`http://${this.ip}:3000/gooddaycount",{"_index":859,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get(`http://${this.ip}:3000/searchentri",{"_index":863,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.post(`http://${this.ip}:3000/login`,data,{observ",{"_index":864,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.post(`http://${this.ip}:3000/register`,data",{"_index":865,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.post(`http://${this.ip}:3000/saveentri",{"_index":857,"title":{},"body":{"injectables/RestService.html":{}}}],["this.initavaiableemot",{"_index":1026,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.initializedemot",{"_index":1032,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.initializedemotions.emit(tru",{"_index":1042,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.isact",{"_index":524,"title":{},"body":{"classes/Emotion.html":{},"components/NavigationComponent.html":{}}}],["this.ismobil",{"_index":814,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["this.lmdaytyp",{"_index":464,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.loggedin",{"_index":1024,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.mobiles",{"_index":812,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["this.moodtext",{"_index":1053,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.nam",{"_index":523,"title":{},"body":{"classes/Emotion.html":{}}}],["this.negativeemot",{"_index":565,"title":{},"body":{"classes/Entry.html":{}}}],["this.negday",{"_index":447,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.negemot",{"_index":719,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["this.negemotions.filter((el",{"_index":1065,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.negemotions.map(",{"_index":1070,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.negemotions.map((valu",{"_index":730,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["this.password",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.password}).subscribe(data",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.posday",{"_index":444,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.posemot",{"_index":718,"title":{},"body":{"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["this.posemotions.filter((el",{"_index":1062,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.posemotions.map(",{"_index":1068,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.posemotions.map((valu",{"_index":724,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["this.positiveemot",{"_index":564,"title":{},"body":{"classes/Entry.html":{}}}],["this.repeatpw",{"_index":781,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.rest.getallentries().subscribe((data",{"_index":263,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.rest.getbaddaycount().subscribe((data",{"_index":446,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.rest.getgooddaycount().subscribe((data",{"_index":443,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.rest.getlastcreatedentry().subscribe((data",{"_index":449,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.rest.getnegativeemotions().subscribe((data",{"_index":729,"title":{},"body":{"components/ReadMoodComponent.html":{},"injectables/SharedVarsService.html":{}}}],["this.rest.getpositiveemotions().subscribe((data",{"_index":722,"title":{},"body":{"components/ReadMoodComponent.html":{},"injectables/SharedVarsService.html":{}}}],["this.rest.login({usernam",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.rest.regist",{"_index":795,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.rest.saveentry(entry).subscribe((entri",{"_index":1066,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.router.navigatebyurl(\"/dashboard",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(\"/login",{"_index":799,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigatebyurl(\"/regist",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/dashboard",{"_index":498,"title":{},"body":{"guards/DataGuard.html":{},"components/WriteMoodComponent.html":{}}}],["this.router.navigatebyurl('/entrylist",{"_index":315,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavigationComponent.html":{}}}],["this.router.navigatebyurl('/readmood",{"_index":317,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{}}}],["this.router.navigatebyurl('readmood",{"_index":579,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["this.saveservice.savetext(fil",{"_index":747,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["this.search",{"_index":913,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchentri",{"_index":1025,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.searchingchange.emit(this.search",{"_index":914,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext",{"_index":910,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext.match(/[#]\\w+/g",{"_index":972,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext.match(/[/]\\w\\d\\s+/g",{"_index":966,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext.match(/[@]\\d{2}[.]\\d{2}.\\d{4}/g",{"_index":954,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext.replace(/[#]\\w+/g",{"_index":977,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext.replace(/[/]\\w\\d\\s+/g",{"_index":971,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext.replace(/[@]\\d{2}[.]\\d{2}.\\d{4}/g",{"_index":964,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.selectedd",{"_index":256,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.selecteddate.setdate(field",{"_index":303,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.selecteddate.setfullyear(this.selecteddate.getfullyear()+amount",{"_index":280,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.selecteddate.setmonth(this.selecteddate.getmonth",{"_index":278,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.selectedday",{"_index":1021,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.selecteddayentri",{"_index":1022,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.selectedentri",{"_index":1023,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["this.shared.avaiablenegativeemotions.length",{"_index":1058,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.shared.avaiablenegativeemotions.slice(0",{"_index":1057,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.shared.avaiablepositiveemotions.length",{"_index":1056,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.shared.avaiablepositiveemotions.slice(0",{"_index":1055,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.shared.initializedemotions.subscribe(v",{"_index":1054,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.shared.loggedin",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["this.shared.usernam",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["this.sharedvars.selectedday",{"_index":313,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.sharedvars.selectedday.tolocaledatestr",{"_index":580,"title":{},"body":{"components/EntryListComponent.html":{},"components/ReadMoodComponent.html":{}}}],["this.sharedvars.selecteddayentri",{"_index":268,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.sharedvars.selectedentry.tag",{"_index":741,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["this.sharedvars.selectedentry.text",{"_index":739,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["this.sharedvars.selectedentry.titl",{"_index":732,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["this.sharedvars.setselectedentry(entri",{"_index":578,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.sharedvars.setselectedentry(this.entri",{"_index":465,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.sharedvars.setselectedentry(this.getselecteddayentries(field)[0",{"_index":316,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.tag",{"_index":562,"title":{},"body":{"classes/Entry.html":{},"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["this.tags.foreach((x",{"_index":932,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.tags.length",{"_index":952,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.tags.push(valu",{"_index":976,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.tags.split",{"_index":1061,"title":{},"body":{"components/WriteMoodComponent.html":{}}}],["this.text",{"_index":563,"title":{},"body":{"classes/Entry.html":{}}}],["this.titl",{"_index":566,"title":{},"body":{"classes/Entry.html":{},"components/WriteMoodComponent.html":{}}}],["this.today",{"_index":258,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.today.getd",{"_index":301,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.today.getfullyear",{"_index":299,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.today.getmonth",{"_index":300,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.typ",{"_index":525,"title":{},"body":{"classes/Emotion.html":{}}}],["this.usernam",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SharedVarsService.html":{}}}],["this.vars.searchentri",{"_index":949,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.vars.selectedday",{"_index":982,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["this.vars.setselectedentry(",{"_index":981,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["tit",{"_index":500,"title":{},"body":{"guards/DataGuard.html":{}}}],["titl",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/Entry.html":{},"components/ReadMoodComponent.html":{},"injectables/RestService.html":{},"components/WriteMoodComponent.html":{}}}],["title+\".txt",{"_index":744,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["to.setdate(this.calendarcols.length*this.calendarrows.length+1",{"_index":274,"title":{},"body":{"components/CalendarComponent.html":{}}}],["today",{"_index":202,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{}}}],["todo",{"_index":648,"title":{},"body":{"components/NavigationComponent.html":{}}}],["togglenav",{"_index":642,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tologin",{"_index":771,"title":{},"body":{"components/RegisterComponent.html":{}}}],["top",{"_index":357,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["top:nth",{"_index":360,"title":{},"body":{"components/CalendarComponent.html":{}}}],["toregist",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["transform",{"_index":376,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["transit",{"_index":547,"title":{},"body":{"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["translat",{"_index":377,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{}}}],["translate(0",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/WriteMoodComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["true",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"guards/DataGuard.html":{},"components/LoginComponent.html":{},"components/ReadMoodComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["txt",{"_index":700,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["type",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"directives/ClickOutsideDirective.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"classes/Emotion.html":{},"components/EmotionListComponent.html":{},"classes/Entry.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResponsiveService.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(3",{"_index":361,"title":{},"body":{"components/CalendarComponent.html":{}}}],["types/fil",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["umwandeln",{"_index":735,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["und",{"_index":784,"title":{},"body":{"components/RegisterComponent.html":{}}}],["underlin",{"_index":587,"title":{},"body":{"components/EntryListComponent.html":{}}}],["unit",{"_index":1170,"title":{},"body":{"index.html":{}}}],["uppercas",{"_index":583,"title":{},"body":{"components/EntryListComponent.html":{}}}],["us",{"_index":1160,"title":{},"body":{"index.html":{}}}],["user",{"_index":674,"title":{},"body":{"components/NavigationComponent.html":{}}}],["usernam",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SharedVarsService.html":{}}}],["userp",{"_index":681,"title":{},"body":{"components/NavigationComponent.html":{}}}],["val._id",{"_index":726,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["val.createdon.getd",{"_index":321,"title":{},"body":{"components/CalendarComponent.html":{}}}],["val.createdon.getfullyear",{"_index":319,"title":{},"body":{"components/CalendarComponent.html":{}}}],["val.createdon.getmonth",{"_index":320,"title":{},"body":{"components/CalendarComponent.html":{}}}],["valu",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ReadMoodComponent.html":{},"injectables/RestService.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["value._id",{"_index":727,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["value.isact",{"_index":728,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["value.replac",{"_index":958,"title":{},"body":{"components/SearchComponent.html":{}}}],["value.split",{"_index":960,"title":{},"body":{"components/SearchComponent.html":{}}}],["value.tolowercas",{"_index":969,"title":{},"body":{"components/SearchComponent.html":{}}}],["var",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["variabl",{"_index":1100,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vars.servic",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"guards/DataGuard.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["vars.service.t",{"_index":990,"title":{},"body":{"injectables/SharedVarsService.html":{},"coverage.html":{}}}],["vars.service.ts:11",{"_index":1017,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:12",{"_index":1018,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:13",{"_index":1019,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:15",{"_index":1015,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:16",{"_index":1016,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:18",{"_index":1013,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:19",{"_index":1012,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:20",{"_index":1014,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:22",{"_index":1001,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:37",{"_index":1003,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:53",{"_index":1010,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars.service.ts:62",{"_index":1004,"title":{},"body":{"injectables/SharedVarsService.html":{}}}],["vars:sharedvarsservic",{"_index":907,"title":{},"body":{"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["verfügbaren",{"_index":714,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["version",{"_index":1148,"title":{},"body":{"index.html":{}}}],["verticalstrip",{"_index":678,"title":{},"body":{"components/NavigationComponent.html":{}}}],["via",{"_index":1173,"title":{},"body":{"index.html":{}}}],["view",{"_index":306,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavigationComponent.html":{}}}],["viewentri",{"_index":213,"title":{},"body":{"components/CalendarComponent.html":{},"components/SearchEntryListComponent.html":{}}}],["viewentry(",{"_index":980,"title":{},"body":{"components/SearchEntryListComponent.html":{}}}],["viewentry(field",{"_index":240,"title":{},"body":{"components/CalendarComponent.html":{}}}],["void",{"_index":221,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"injectables/SharedVarsService.html":{},"components/WriteMoodComponent.html":{}}}],["w",{"_index":329,"title":{},"body":{"components/CalendarComponent.html":{},"components/SearchComponent.html":{}}}],["w\\\\d\\\\",{"_index":896,"title":{},"body":{"components/SearchComponent.html":{}}}],["weight",{"_index":351,"title":{},"body":{"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/WriteMoodComponent.html":{}}}],["white",{"_index":486,"title":{},"body":{"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/NavigationComponent.html":{},"components/WriteMoodComponent.html":{}}}],["whitehead",{"_index":685,"title":{},"body":{"components/NavigationComponent.html":{}}}],["whitesmok",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["width",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/WriteMoodComponent.html":{}}}],["wiederholt",{"_index":789,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.innerwidth",{"_index":815,"title":{},"body":{"injectables/ResponsiveService.html":{}}}],["withcredenti",{"_index":858,"title":{},"body":{"injectables/RestService.html":{}}}],["won't",{"_index":654,"title":{},"body":{"components/NavigationComponent.html":{}}}],["write",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{}}}],["writemood",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["writemoodcompon",{"_index":88,"title":{"components/WriteMoodComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DashboardComponent.html":{},"components/EmotionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ReadMoodComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/SearchEntryListComponent.html":{},"components/WriteMoodComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wurden",{"_index":782,"title":{},"body":{"components/RegisterComponent.html":{}}}],["x+1)+7*i",{"_index":332,"title":{},"body":{"components/CalendarComponent.html":{}}}],["xl",{"_index":389,"title":{},"body":{"components/CalendarComponent.html":{}}}],["y",{"_index":759,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["z",{"_index":665,"title":{},"body":{"components/NavigationComponent.html":{}}}],["zone.j",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zu",{"_index":734,"title":{},"body":{"components/ReadMoodComponent.html":{}}}],["zurück",{"_index":708,"title":{},"body":{"components/ReadMoodComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                    Public\n                                rest\n                            \n                            \n                                    Public\n                                shared\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(responsive: ResponsiveService, rest: RestService, shared: SharedVarsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shared\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rest:     RestService\n\n                    \n                \n                    \n                        \n                            Type :     RestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shared\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shared:     SharedVarsService\n\n                    \n                \n                    \n                        \n                            Type :     SharedVarsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {ResponsiveService} from './services/responsive.service';\nimport { SharedVarsService } from './services/shared-vars.service';\nimport {RestService} from './services/rest.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'app';\n\n  constructor(public responsive:ResponsiveService, public rest: RestService, public shared: SharedVarsService){\n\n  }\n}\n\n    \n\n    \n        \n  \n\n\n  \n\n  \n\n  \n  \n    \n      \n\n      \n    \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .desktop-nav{\n  min-width: 250px;\n}\n.pad-left{\n  padding-left: 30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\nAppModule -->\n\nCalendarComponent->AppModule\n\n\n\n\n\nClickOutsideDirective\n\nClickOutsideDirective\n\nAppModule -->\n\nClickOutsideDirective->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nEmotionListComponent\n\nEmotionListComponent\n\nAppModule -->\n\nEmotionListComponent->AppModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nAppModule -->\n\nEntryListComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nReadMoodComponent\n\nReadMoodComponent\n\nAppModule -->\n\nReadMoodComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSearchEntryListComponent\n\nSearchEntryListComponent\n\nAppModule -->\n\nSearchEntryListComponent->AppModule\n\n\n\n\n\nWriteMoodComponent\n\nWriteMoodComponent\n\nAppModule -->\n\nWriteMoodComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CalendarComponent\n                        \n                        \n                            ClickOutsideDirective\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            EmotionListComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            ReadMoodComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SearchEntryListComponent\n                        \n                        \n                            WriteMoodComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { WriteMoodComponent } from './components/write-mood/write-mood.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { ClickOutsideDirective } from './directives/click-outside.directive';\nimport { EmotionListComponent } from './components/emotion-list/emotion-list.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { CalendarComponent } from './components/calendar/calendar.component';\nimport { EntryListComponent } from './components/entry-list/entry-list.component';\nimport { ReadMoodComponent } from './components/read-mood/read-mood.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { SearchEntryListComponent } from './components/search-entry-list/search-entry-list.component';\nimport { FileSaverModule } from 'ngx-filesaver';\nimport { LoginComponent } from './components/login//login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport {FormsModule} from '@angular/forms';\nimport {AuthGuard} from './auth/auth.guard';\nimport {DataGuard} from './auth/data.guard';\n\nconst appRoutes : Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'dashboard' , component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'writeMood', component : WriteMoodComponent, canActivate: [AuthGuard]},\n  {path: 'calendar', component: CalendarComponent, canActivate: [AuthGuard]},\n  {path: 'entryList', component: EntryListComponent, canActivate: [AuthGuard]},\n  {path: 'readMood', component: ReadMoodComponent, canActivate: [AuthGuard, DataGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    WriteMoodComponent,\n    NavigationComponent,\n    ClickOutsideDirective,\n    EmotionListComponent,\n    CalendarComponent,\n    EntryListComponent,\n    ReadMoodComponent,\n    LoginComponent,\n    RegisterComponent,\n    SearchComponent,\n    SearchEntryListComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false}\n    ),\n    HttpClientModule,\n    FileSaverModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(shared: SharedVarsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shared\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.guard.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {SharedVarsService} from '../services/shared-vars.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private shared:SharedVarsService, private router: Router){\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.checkLogin();\n  }\n\n  checkLogin(): boolean{\n    if(this.shared.loggedIn){\n      return true;\n    }\n\n    this.router.navigateByUrl('/login');\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/calendar/calendar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n            \n                styleUrls\n                ./calendar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarCols\n                            \n                            \n                                calendarRows\n                            \n                            \n                                dayCount\n                            \n                            \n                                entries\n                            \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                selectedDate\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeMonth\n                            \n                            \n                                changeYear\n                            \n                            \n                                daysInMonth\n                            \n                            \n                                entriesPerDay\n                            \n                            \n                                getMonthName\n                            \n                            \n                                getRange\n                            \n                            \n                                getSelectedDayEntries\n                            \n                            \n                                hasFieldEntry\n                            \n                            \n                                isFieldToday\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                viewEntry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestService, router: Router, sharedVars: SharedVarsService, responsive: ResponsiveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/calendar/calendar.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedVars\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeMonth(amount: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amount\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeYear\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeYear(amount: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amount\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysInMonth\n                            \n                            \n                        \n                    \n                \n                \n                    \ndaysInMonth(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entriesPerDay\n                            \n                            \n                        \n                    \n                \n                \n                    \nentriesPerDay(field: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMonthName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMonthName(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRange\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSelectedDayEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSelectedDayEntries(field: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFieldEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasFieldEntry(field: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFieldToday\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFieldToday(field: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \nviewEntry(field: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendarCols\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendarCols:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendarRows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendarRows:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dayCount:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entries:     Entry[]\n\n                    \n                \n                    \n                        \n                            Type :     Entry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDate:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            today\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        today:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/calendar/calendar.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Entry} from '../../classes/entry';\nimport {RestService} from '../../services/rest.service';\nimport {Router} from '@angular/router';\nimport {SharedVarsService} from '../../services/shared-vars.service';\nimport {ResponsiveService} from '../../services/responsive.service';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n\n  calendarRows;\n  calendarCols;\n\n  dayCount;\n  selectedDate;\n  today;\n\n  entries: Entry[];\n\n  constructor(private rest: RestService, private router: Router, private sharedVars:SharedVarsService, public responsive: ResponsiveService) {\n    this.calendarRows = Array(5);\n    this.calendarCols = Array(7);\n    this.dayCount = this.daysInMonth(new Date());\n    this.selectedDate = new Date();\n    this.today = new Date();\n\n    this.entries = new Array();\n    let fromTo = this.getRange();\n\n    this.rest.getAllEntries().subscribe((data) =>{\n      this.entries = data as Array;\n      this.entries.map(e => e.createdOn = new Date(e.createdOn));\n    });\n\n\n    //this.sharedVars.selectedDayEntries = this.getSelectedDayEntries()\n  }\n\n  ngOnInit() {\n  }\n\n  getRange(){\n    let from = new Date(this.selectedDate);\n    from.setDate(1);\n    from.setHours(0,0,0,0);\n    let to = new Date(from);\n    to.setDate(this.calendarCols.length*this.calendarRows.length+1);\n    return [from,to];\n  }\n\n  daysInMonth(date: Date) {\n    return new Date(date.getFullYear(), date.getMonth()+1,0).getDate();\n  }\n  changeMonth(amount: number){\n    this.selectedDate.setMonth(this.selectedDate.getMonth() + amount);\n    this.dayCount = this.daysInMonth(this.selectedDate);\n  }\n  changeYear(amount: number){\n    this.selectedDate.setFullYear(this.selectedDate.getFullYear()+amount);\n    this.dayCount = this.daysInMonth(this.selectedDate);\n  }\n  getMonthName(date: Date){\n    const months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n    return months[date.getMonth()];\n  }\n  hasFieldEntry(field: number) {\n    let date = new Date(this.selectedDate);\n    let type = '';\n    date.setDate(field);\n    this.entries.forEach((element) =>{\n      if(element.createdOn.getFullYear() === date.getFullYear() && element.createdOn.getMonth() === date.getMonth() && element.createdOn.getDate() === date.getDate()) {\n        if(element.positiveEmotions.length > 0){\n          if(element.negativeEmotions.length > 0){\n            type = 'entry neut';\n          }else{\n            type = 'entry pos';\n          }\n        }else{\n          type = 'entry neg';\n        }\n        return true;\n      }\n    });\n    return type;\n\n  }\n  isFieldToday(field : number){\n    let date = new Date(this.selectedDate);\n\n    date.setDate(field);\n    if(date.getFullYear() === this.today.getFullYear() && date.getMonth() === this.today.getMonth() && date.getDate() === this.today.getDate()){\n      return true;\n    }\n    return false;\n  }\n\n  viewEntry(field: number){\n    if(this.hasFieldEntry(field) !== ''){\n      this.selectedDate.setDate(field);\n      //Switch to list view when there are more than 1 entry\n      if(this.entriesPerDay(field) > 1){\n        this.sharedVars.selectedDayEntries = this.getSelectedDayEntries(field);\n        const selDate = new Date(this.selectedDate);\n        selDate.setDate(field);\n        this.sharedVars.selectedDay = selDate;\n\n        if(this.responsive.getMobile()) {\n          this.router.navigateByUrl('/entryList');\n        }\n      }else{\n         this.sharedVars.setSelectedEntry(this.getSelectedDayEntries(field)[0]);\n        const selDate = new Date(this.selectedDate);\n        selDate.setDate(field);\n        this.sharedVars.selectedDay = selDate;\n        if(this.responsive.getMobile()) {\n\n\n          this.router.navigateByUrl('/readMood');\n        }else{\n          this.sharedVars.selectedDayEntries = this.getSelectedDayEntries(field);\n        }\n      }\n    }\n  }\n  getSelectedDayEntries(field: number){\n    const date = new Date(this.selectedDate);\n    date.setDate(field);\n    return this.entries.filter((val) =>{\n      return (val.createdOn.getFullYear() === date.getFullYear() && val.createdOn.getMonth() === date.getMonth() && val.createdOn.getDate() === date.getDate());\n    });\n  }\n  entriesPerDay(field: number){\n    const date = new Date(this.selectedDate);\n    let count = 0;\n    date.setDate(field);\n    this.entries.forEach((val) =>{\n      if(val.createdOn.getFullYear() === date.getFullYear() && val.createdOn.getMonth() === date.getMonth() && val.createdOn.getDate() === date.getDate()){\n        count++;\n      }\n    });\n    return count;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n  \n  {{selectedDate.getFullYear() }}\n  \n\n\n\n\n  \n    \n      \n      {{getMonthName(selectedDate) }}\n      \n\n    \n  \n  \n    \n      M\n    \n    \n      T\n    \n    \n      W\n    \n    \n      T\n    \n    \n      F\n    \n    \n      S\n    \n    \n      S\n    \n  \n\n  \n    \n      \n        \n        \n        {{(((x+1)+7*y) \n\n    \n  \n\n\n\n\n\n\n\n\n\n\n  \n    \n      Calendar\n    \n  \n  \n    \n\n      \n        \n          \n          {{selectedDate.getFullYear() }}\n          \n        \n      \n      \n        \n          \n            \n              \n              {{getMonthName(selectedDate) }}\n              \n\n            \n          \n          \n            \n              M\n            \n            \n              T\n            \n            \n              W\n            \n            \n              T\n            \n            \n              F\n            \n            \n              S\n            \n            \n              S\n            \n          \n\n          \n            \n              \n                \n                \n                {{(((x+1)+7*y) \n\n            \n          \n\n\n        \n      \n\n    \n\n\n\n\n\n\n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./calendar.component.css\n                \n                .calendar-panel{\n  height: 420px;\n}\n.blue{\n  background-color: #4A96D3;\n}\n.red{\n  background-color: #D15E4B;\n}\n.col{\n  text-align: center;\n}\n.cal-day{\n\n  font-family: Oswald;\n  font-weight: lighter;\n  color: #4D4D4D;\n  font-size: 0.9em;\n}\n.marg-top{\n  margin-top: 35px;\n}\n\n.marg-top:nth-of-type(3){\n  margin-top: 10px;\n\n}\nh3{\n  font-family: Oswald;\n  font-size: 1.8em;\n  display: inline-block;\n  color: #4D4D4D;\n}\n\n.paddings{\n  padding: 10px 30px 10px 30px;\n}\n\n.today{\n  border-radius: 40px;\n  border-color: #4A96D3;\n  border-width: 2px;\n  border-style: solid;\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%,-50%);\n}\n\n img{\n  height: 30px;\n  display: inline-block;\n  margin-bottom: 10px;\n}\n.selector > h3{\n  margin: 10px 20px 10px 20px;\n  font-size: 2em;\n}\n.selector{\n  text-align: center;\n}\n.month-selector{\n  margin-bottom: 20px;\n}\n.pad-top{\n  padding-top: 15px;\n}\n\n.entry{\n  width: 8px;\n  height: 8px;\n  border-radius: 20px;\n  border-width: 2px;\n  border-style: solid;\n\n  position: absolute;\n  bottom: -7px;\n  left: 50%;\n  transform: translate(-50%,0%);\n}\n.pos{\n  border-color: #4A96D3;\n}\n.neg{\n  border-color: #D15E4B;\n}\n.neut{\n  border-color: #4D4D4D;\n}\n\n.max-width{\n  max-width: 800px;\n}\n.min-width{\n  min-width: 410px;\n}\n\n.panel-desktop-xl{\n  height: 530px;\n  background-color: #fff;\n  border-radius: 15px;\n  margin: 15px 15px 15px 15px;\n  overflow: hidden;\n  overflow: auto;\n}\n\n@media all and (max-width: 372px){\n  .row{\n    font-size: 11px !important;\n  }\n  .paddings{\n    padding: 10px 20px 10px 20px;\n  }\n  .calendar-panel{\n    height: 380px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{selectedDate.getFullYear() }}                    {{getMonthName(selectedDate) }}                        M              T              W              T              F              S              S                                          {{(((x+1)+7*y)                   Calendar                                              {{selectedDate.getFullYear() }}                                                                                        {{getMonthName(selectedDate) }}                                                                        M                                      T                                      W                                      T                                      F                                      S                                      S                                                                                                          {{(((x+1)+7*y)                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickOutsideDirective.html":{"url":"directives/ClickOutsideDirective.html","title":"directive - ClickOutsideDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ClickOutsideDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/click-outside.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appClickOutside]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                appClickOutside\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/click-outside.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        appClickOutside\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/click-outside.directive.ts:13\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.target' \n                        \n                    \n                \n                    \ndocument:click(targetElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/click-outside.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appClickOutside]'\n})\nexport class ClickOutsideDirective {\n\n  constructor(private _elementRef: ElementRef) {\n\n  }\n\n  @Output()\n  public appClickOutside = new EventEmitter();\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(targetElement){\n    const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if(!clickedInside){\n      this.appClickOutside.emit(null);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entry\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                lMDayType\n                            \n                            \n                                lMMoodText\n                            \n                            \n                                negDays\n                            \n                            \n                                posDays\n                            \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                routeToLastMood\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestService, sharedVars: SharedVarsService, router: Router, responsive: ResponsiveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/dashboard.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedVars\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routeToLastMood\n                            \n                            \n                        \n                    \n                \n                \n                    \nrouteToLastMood()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     Entry\n\n                    \n                \n                    \n                        \n                            Type :     Entry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMobile:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lMDayType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lMDayType:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lMMoodText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lMMoodText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            negDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        negDays:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posDays:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {RestService} from '../../services/rest.service';\nimport {SharedVarsService} from '../../services/shared-vars.service';\nimport {Entry} from '../../classes/entry';\nimport {Router} from '@angular/router';\nimport {ResponsiveService} from '../../services/responsive.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  posDays: number;\n  negDays: number;\n\n  lMDayType: number;\n  lMMoodText: string;\n\n  private entry: Entry;\n\n  public isMobile;\n\n  public search: boolean;\n\n  constructor(private rest:RestService, private sharedVars:SharedVarsService, private router: Router, public responsive:ResponsiveService) {\n\n  }\n\n  ngOnInit() {\n    this.entry = new Entry(new Date());\n\n    this.rest.getGoodDayCount().subscribe((data) =>{\n      this.posDays = data['goodDayCount'];\n    });\n\n    this.rest.getBadDayCount().subscribe((data) =>{\n      this.negDays = data['badDayCount'];\n    });\n\n    this.rest.getLastCreatedEntry().subscribe((data) =>{\n      if(data) {\n        this.entry = new Entry(data['createdOn']);\n        this.entry.text = data['text'];\n        this.entry.tags = data['tags'];\n        this.entry.title = data['title'];\n        this.entry.positiveEmotions = data['positiveEmotions'];\n        this.entry.negativeEmotions = data['negativeEmotions'];\n        if (this.entry.positiveEmotions.length > 0) {\n          if (this.entry.negativeEmotions.length > 0) {\n            this.lMDayType = 0;\n          } else {\n            this.lMDayType = 1;\n          }\n        } else {\n          this.lMDayType = -1;\n        }\n      }\n    });\n  }\n\n  routeToLastMood(){\n    this.sharedVars.setSelectedEntry(this.entry);\n\n\n    this.router.navigateByUrl('/readMood');\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n        Good Days\n        {{posDays}}\n      \n\n    \n    \n      \n        Bad Days\n        {{negDays}}\n      \n    \n  \n  \n    \n      {{lMDayType}}\n      Last Mood \n      \n        {{this.entry.text}}\n      \n    \n  \n  \n    \n\n    \n  \n\n\n\n\n\n  \n    \n      Dashboard\n        \n      \n\n    \n  \n  \n  \n    \n      \n        \n          \n            Good Days\n            {{posDays}}\n          \n\n        \n        \n          \n            Bad Days\n            {{negDays}}\n          \n        \n      \n\n      \n        \n          {{lMDayType}}\n          Last Mood \n          \n            {{this.entry.text}}\n          \n        \n      \n\n    \n    \n\n    \n  \n\n  \n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                .smallDashboard-panel{\n\n  text-align: center;\n}\n.smallDashboard-panel > h4{\n\n}\n.smallDashboard-panel > h3{\n  font-family: Oswald;\n  font-style: italic;\n  margin-top: 30px;\n  font-size: 2.5em;\n\n}\nh4{\n  font-family: Oswald;\n  font-weight: lighter;\n  margin-top: 20px;\n  font-size: 1.8em;\n  color: #4D4D4D;\n}\np{\n  font-family: Oswald;\n  font-weight: bold;\n  font-size: 1.1em;\n  height: 50%;\n  line-height: 23px;\n  overflow: hidden;\n}\n.margin-left{\n  margin-left: 20px;\n}\n.overflow-hidden-no-scroll{\n  overflow: hidden;\n}\n.circle{\n  position: absolute;\n  width: 30px;\n  height: 30px;\n  border-radius: 30px;\n  background-color: #aaa;\n  text-align: center;\n  left: 150px;\n  top: 25px;\n  padding-right: 3px;\n  font-size: 1.2em;\n  font-family: Oswald;\n  font-style: italic;\n  color: white;\n}\n.blue{\n  background-color: #4A96D3;\n}\n.red{\n  background-color: #D15E4B;\n}\n.neut{\n  background-color: #4D4D4D;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Good Days        {{posDays}}                            Bad Days        {{negDays}}                        {{lMDayType}}      Last Mood               {{this.entry.text}}                                    Dashboard                                                                Good Days            {{posDays}}                                                Bad Days            {{negDays}}                                                {{lMDayType}}          Last Mood                       {{this.entry.text}}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DataGuard.html":{"url":"guards/DataGuard.html","title":"guard - DataGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    DataGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/data.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                isEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(shared: SharedVarsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/data.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shared\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/data.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty(entry: Entry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/data.guard.ts:34\n                            \n                        \n\n\n                \n                    \n                            Checks if provided Entry is empty\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                        \n                                                                    Entry\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {SharedVarsService} from '../services/shared-vars.service';\nimport {Entry} from '../classes/entry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataGuard implements CanActivate {\n\n  constructor(private shared:SharedVarsService, private router: Router){\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    // If selected entry is empty go to dashboard\n    if(this.isEmpty(this.shared.selectedEntry)) {\n      this.router.navigateByUrl('/dashboard');\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  /**\n   * Checks if provided Entry is empty\n   * @param {Entry} entry\n   * @returns {boolean}\n   */\n  isEmpty(entry: Entry): boolean{\n    let tit, tex, tag, pos, neg  = true;\n\n      tit = entry.title.length === 0;\n      tex = entry.text.length === 0;\n      tag = entry.tags.length === 0;\n      pos = entry.positiveEmotions.length === 0;\n      neg = entry.negativeEmotions.length ===0;\n\n      return tit && tex && tag && pos && neg;\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Emotion.html":{"url":"classes/Emotion.html","title":"class - Emotion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Emotion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/emotion.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortEmotions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, name: string, isActive: boolean, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/emotion.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isActive\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/emotion.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/emotion.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/emotion.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/emotion.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sortEmotions(emotions: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes/emotion.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emotions\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Emotion {\n  public _id: string;\n  public name: string;\n  public type: string;\n  public isActive: boolean;\n\n  constructor(type: string, name: string,isActive: boolean,id: string){\n    this.name = name;\n    this.isActive = isActive;\n    this.type = type;\n    this._id = id;\n  }\n\n  static sortEmotions(emotions:Array): Array{\n    emotions.sort((a,b) =>{\n      return a.name.toLocaleLowerCase().localeCompare(b.name.toLocaleLowerCase());\n    });\n    return emotions;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmotionListComponent.html":{"url":"components/EmotionListComponent.html","title":"component - EmotionListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmotionListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/emotion-list/emotion-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-emotion-list\n            \n\n            \n                styleUrls\n                ./emotion-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./emotion-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editable\n                            \n                            \n                                emotions\n                            \n                            \n                                emotionType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/emotion-list/emotion-list.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editable\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/emotion-list/emotion-list.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emotions\n                    \n                    \n                            \n                            Type :    Emotion[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/emotion-list/emotion-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emotionType\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/emotion-list/emotion-list.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/emotion-list/emotion-list.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Emotion} from '../../classes/emotion';\n\n@Component({\n  selector: 'app-emotion-list',\n  templateUrl: './emotion-list.component.html',\n  styleUrls: ['./emotion-list.component.css']\n})\nexport class EmotionListComponent implements OnInit {\n  @Input()\n  editable: boolean;\n\n  @Input()\n  emotionType: string;\n  @Input()\n  emotions: Emotion[];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{e.name}}\n  \n\n\n    \n\n    \n                \n                    ./emotion-list.component.css\n                \n                .emotion-list{\n  list-style: none;\n  padding: 0;\n  line-height: 2.5em;\n  margin-bottom: 0px;\n}\n.emotion-list >li{\n  padding-left: 15px;\n  color: #4D4D4D;\n  font-family: Oswald;\n  font-size: 1.25em;\n  font-weight: lighter;\n  transition: background-color 0.4s, color 0.4s;\n}\n.positive{\n\n  background-color: #4A96D3;\n  color: white !important;\n}\n.negative{\n  background-color: #D15E4B;\n  color: white !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{e.name}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmotionListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entry.html":{"url":"classes/Entry.html","title":"class - Entry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/entry.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                createdOn\n                            \n                            \n                                    Public\n                                negativeEmotions\n                            \n                            \n                                    Public\n                                positiveEmotions\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/entry.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/entry.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createdOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createdOn:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/entry.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            negativeEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        negativeEmotions:     Emotion[]\n\n                    \n                \n                    \n                        \n                            Type :     Emotion[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/entry.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            positiveEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        positiveEmotions:     Emotion[]\n\n                    \n                \n                    \n                        \n                            Type :     Emotion[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/entry.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/entry.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/entry.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/entry.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Emotion} from './emotion';\n\nexport class Entry {\n  public _id: string;\n  public createdOn : Date;\n  public tags : string[];\n  public text : string;\n  public title : string;\n  public positiveEmotions: Emotion[];\n  public negativeEmotions: Emotion[];\n\n  constructor(date){\n    this.createdOn = date;\n    this.tags = new Array();\n    this.text = '';\n    this.positiveEmotions = new Array();\n    this.negativeEmotions = new Array();\n    this.title = '';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListComponent.html":{"url":"components/EntryListComponent.html","title":"component - EntryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/entry-list/entry-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entry-list\n            \n\n            \n                styleUrls\n                ./entry-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entry-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                    Public\n                                sharedVars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToEntry\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedVars: SharedVarsService, router: Router, responsive: ResponsiveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/entry-list/entry-list.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedVars\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToEntry(entry: Entry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/entry-list/entry-list.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                        \n                                                                    Entry\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/entry-list/entry-list.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/entry-list/entry-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sharedVars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedVars:     SharedVarsService\n\n                    \n                \n                    \n                        \n                            Type :     SharedVarsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/entry-list/entry-list.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Entry} from '../../classes/entry';\nimport {SharedVarsService} from '../../services/shared-vars.service';\nimport {Router} from '@angular/router';\nimport {ResponsiveService} from '../../services/responsive.service';\n\n@Component({\n  selector: 'app-entry-list',\n  templateUrl: './entry-list.component.html',\n  styleUrls: ['./entry-list.component.css']\n})\nexport class EntryListComponent implements OnInit {\n\n\n\n\n  constructor(public sharedVars: SharedVarsService,private router: Router,public responsive: ResponsiveService) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  goToEntry(entry: Entry){\n    console.log(entry);\n    this.sharedVars.setSelectedEntry(entry);\n\n    this.router.navigateByUrl('readMood');\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{this.sharedVars.selectedDay.toLocaleDateString()}}\n  \n\n\n  \n\n    \n      {{i+1}}\n      {{entry.title | uppercase}}\n    \n  \n\n\n\n\n\n\n  \n    \n      {{this.sharedVars.selectedDay.toLocaleDateString()}}\n    \n  \n\n  \n    \n      \n        {{i+1}}\n        {{entry.title | uppercase}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./entry-list.component.css\n                \n                .entry-type{\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border-radius: 30px;\n\n}\n\nspan{\n  padding-right: 4px;\n}\n\n.marg-top{\n  margin: 25px 20px 20px 20px;\n\n}\n.pad-bot{\n  padding-bottom: 20px;\n}\n\n.underline{\n  border-bottom: #4D4D4D;\n  border-bottom-style: solid;\n  margin-left: 0px;\n  margin-right: 0px;\n\n}\n\n.desktop-list-entry{\n  margin-left: 10px;\n  margin-bottom: 10px;\n  padding: 10px 0px 10px 0px;\n  background-color: #fff;\n  color: #4D4D4D;\n  transition: background-color 0.2s;\n}\n.desktop-list-entry:hover{\n  background-color: #dddddd;\n}\n.text-dark-gray{\n  color: #4D4D4D;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{this.sharedVars.selectedDay.toLocaleDateString()}}              {{i+1}}      {{entry.title | uppercase}}                  {{this.sharedVars.selectedDay.toLocaleDateString()}}                          {{i+1}}        {{entry.title | uppercase}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorText\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                            \n                                toRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, responsive: ResponsiveService, shared: SharedVarsService, rest: RestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shared\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toRegister\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoRegister()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ResponsiveService } from '../../services/responsive.service';\nimport { SharedVarsService } from '../../services/shared-vars.service';\nimport {RestService} from '../../services/rest.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string ;\n  password: string;\n\n  errorText: string;\n\n  constructor(private router: Router, public responsive:ResponsiveService, private shared: SharedVarsService,private rest: RestService) { }\n\n  ngOnInit() {\n    this.username = \"\";\n    this.password = \"\";\n    this.errorText = \"\";\n  }\n\n  submit(){\n\n    this.rest.login({username: this.username, password: this.password}).subscribe(data =>{\n      if((data.body).text === 'success'){\n        this.shared.username = this.username;\n        this.router.navigateByUrl(\"/dashboard\");\n        this.shared.loggedIn = true;\n      }else{\n        this.errorText = (data.body).text;\n      }\n    });\n\n  }\n\n  toRegister(){\n    this.router.navigateByUrl(\"/register\");\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n            Login\n          \n      \n      \n          \n              \n          \n      \n      \n        \n          \n        \n      \n      \n        \n          Login\n        \n      \n      \n        \n          Register\n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n          \n            Login\n          \n      \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n      \n        \n          Login\n        \n      \n      \n        \n          Register\n        \n      \n      \n        {{this.errorText}}\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .content{\n    width: 30%;\n    position: absolute;\n    left: 35%;\n    transform: translate(0%, 30%);\n}\n.login{\n    height: 400px;\n}\n.save{\n    width: 20%;\n    position: absolute;\n    left: 40%;\n}\n.register{\n    width: 25%;\n    position: absolute;\n    left: 37.5%;\n    transform: translate(0, 80%);\n}\n.greencolor{\n    background-color: mediumturquoise;\n    color: whitesmoke;\n}\n.registerWidth{\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Login                                                                                                                            Login                                      Register                                                      Login                                                                                                                    Login                                      Register                            {{this.errorText}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navigation/navigation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                    Public\n                                shared\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleNav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(responsive: ResponsiveService, shared: SharedVarsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navigation/navigation.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shared\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleNav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shared\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shared:     SharedVarsService\n\n                    \n                \n                    \n                        \n                            Type :     SharedVarsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ClickOutsideDirective } from '../../directives/click-outside.directive';\nimport {ResponsiveService} from '../../services/responsive.service';\nimport {SharedVarsService} from '../../services/shared-vars.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n// TODO: Fix bug when switching between Mobile to Desktop View buttons won't react\n  isActive : boolean;\n  constructor(public responsive: ResponsiveService, public shared: SharedVarsService,private router:Router) {\n    this.isActive = false;\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  toggleNav(){\n    this.isActive = !this.isActive;\n\n  }\n\n  logout(){\n    this.shared.loggedIn = false;\n    this.router.navigateByUrl('/login');\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    \n      \n        \n      \n      \n        MOOD &nbsp;MONITOR\n      \n    \n  \n  \n    \n      \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              {{this.shared.username}}\n            \n            \n              \n            \n          \n        \n\n      \n    \n\n    \n      \n        \n        \n        Dashboard\n      \n    \n    \n      \n        \n        \n        Todays Mood\n      \n    \n    \n      \n        \n        \n        Calendar\n      \n    \n  \n\n\n\n\n\n\n  \n    \n      \n        \n          \n          \n            \n              \n                !-->\n              \n            \n          \n          \n            \n              \n                {{this.shared.username}}\n              \n              \n                \n              \n            \n          \n\n        \n      \n      \n        \n          \n          \n          Dashboard\n        \n      \n      \n        \n          \n          \n          Todays Mood\n        \n      \n      \n        \n          \n          \n          Calendar\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./navigation.component.css\n                \n                .nav{\n  background-color: #fff;\n}\n\n.nav-btn{\n  position: absolute;\n  top: 15px;\n  left: 15px;\n}\n.nav-btn > img{\n  width: 50px;\n  height: 50px;\n}\nh3{\n  margin-top: 10px;\n  margin-bottom: 15px;\n  font-family: Oswald;\n  font-style: italic;\n  color: #333333;\n}\nh3 > span{\n  font-family: \"PT Mono\";\n  font-style: normal;\n}\n\n.nav-content-container{\n  position: absolute;\n  top: 0;\n  z-index: 10;\n  background: #ffffff;\n  transition: left 0.5s;\n  width: 80vw;\n}\n.tab-Active{\n  left: 0vw;\n\n}\n.tab-Hidden{\n  left: -100vw;\n}\n.user-panel{\n  height: 150px;\n  background-color: #4A96D3;\n  text-align: center;\n}\n\n\n.nav-element > h4{\n  position: absolute;\n  font-family: Oswald;\n  font-style: italic;\n  left: 130px;\n  top: 50%;\n  text-align: center;\n  transform: translate(-50%,-50%);\n}\n.nav-element > img{\n  position: relative;\n  top: 50%;\n  left: 10px;\n  transform: translate(0%,-50%);\n  width: 40px;\n  max-height: 30px;\n}\n.nav-element{\n  padding: 0px;\n}\n\n.mar-left{\n  margin-left: 25px;\n}\n\n.verticalStripe{\n  position: absolute;\n  top: 50%;\n  transform: translate(0%,-50%);\n  left: 60px;\n  width: 2px;\n  height: 80%;\n  border-radius: 10px;\n  background-color: #666666;\n}\n.userPic{\n  width: 80px;\n  height: 80px;\n  overflow: hidden;\n  border-radius: 200px;\n  margin: auto;\n  margin-top: 20px;\n  border-style: solid;\n  border-width: 3px;\n  border-color: #fff;\n}\n.userPic > img{\n  width: 74px;\n\n}\n\n.logOut{\n  width: 20px;\n  height: 20px;\n  display: inline-block;\n  position: absolute;\n  right: 10px;\n  top: 8px;\n}\n.whiteHeading{\n  color: white;\n  font-family: Oswald;\n  font-style: italic;\n  font-weight: normal;\n  margin-top: 6px;\n  display: inline-block;\n}\n\n\n.nav-desktop{\n  background-color: #fff;\n  height: 100vh;\n  z-index: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        MOOD  MONITOR                                                                                                                                                      {{this.shared.username}}                                                                                                                Dashboard                                            Todays Mood                                            Calendar                                                                                              !-->                                                                                        {{this.shared.username}}                                                                                                                                          Dashboard                                                          Todays Mood                                                          Calendar                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReadMoodComponent.html":{"url":"components/ReadMoodComponent.html","title":"component - ReadMoodComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReadMoodComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/read-mood/read-mood.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-read-mood\n            \n\n            \n                styleUrls\n                ./read-mood.component.css\n            \n\n\n\n            \n                templateUrl\n                ./read-mood.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                negEmotions\n                            \n                            \n                                posEmotions\n                            \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                    Public\n                                rest\n                            \n                            \n                                    Public\n                                sharedVars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                export\n                            \n                            \n                                getEmotions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedVars: SharedVarsService, rest: RestService, responsive: ResponsiveService, saveService: FileSaverService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/read-mood/read-mood.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedVars\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        saveService\n                                                  \n                                                        \n                                                                    FileSaverService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            export\n                            \n                            \n                        \n                    \n                \n                \n                    \nexport()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/read-mood/read-mood.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Export of the data as txt. Collects all data from var and saves as string\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEmotions(aviableList: Array, selectedList: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/read-mood/read-mood.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Gibt die Emotionen zurück die Selektiert sind\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        aviableList\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Alle verfügbaren emotionen\n\n                                                        \n                                                \n                                                \n                                                        selectedList\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Selektierte emotionen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/read-mood/read-mood.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            negEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        negEmotions:     Emotion[]\n\n                    \n                \n                    \n                        \n                            Type :     Emotion[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/read-mood/read-mood.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posEmotions:     Emotion[]\n\n                    \n                \n                    \n                        \n                            Type :     Emotion[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/read-mood/read-mood.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/read-mood/read-mood.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rest:     RestService\n\n                    \n                \n                    \n                        \n                            Type :     RestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/read-mood/read-mood.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sharedVars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedVars:     SharedVarsService\n\n                    \n                \n                    \n                        \n                            Type :     SharedVarsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/read-mood/read-mood.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {SharedVarsService} from '../../services/shared-vars.service';\nimport {Emotion} from '../../classes/emotion';\nimport {RestService} from '../../services/rest.service';\nimport {ResponsiveService} from '../../services/responsive.service';\nimport { FileSaverService } from 'ngx-filesaver';\n\n@Component({\n  selector: 'app-read-mood',\n  templateUrl: './read-mood.component.html',\n  styleUrls: ['./read-mood.component.css']\n})\nexport class ReadMoodComponent implements OnInit {\n\n  posEmotions: Emotion[];\n  negEmotions: Emotion[];\n\n\n\n  constructor(public sharedVars: SharedVarsService, public rest: RestService, public responsive: ResponsiveService,\n              private saveService: FileSaverService) {\n\n    this.posEmotions = new Array();\n    this.negEmotions = new Array();\n\n    // Fetch the positive emotions from the server\n    this.rest.getPositiveEmotions().subscribe((data) =>{\n      this.posEmotions = data as Array;\n\n      // When Emotion was selected mark as Active\n      this.posEmotions.map((value) =>{\n        if(this.sharedVars.selectedEntry.positiveEmotions.find((val) =>{\n\n          return val._id === value._id;\n        })){\n          value.isActive = true;\n        }\n        return value;\n      });\n\n    });\n\n    // Fetch the negativeEmotions from the server\n    this.rest.getNegativeEmotions().subscribe((data) =>{\n          this.negEmotions = data as Array;\n\n\n      this.negEmotions.map((value) =>{\n\n        // When Emotion was selected mark as Active\n        if(this.sharedVars.selectedEntry.negativeEmotions.find((val) =>{\n          return val._id === value._id;\n        })){\n          value.isActive = true;\n        }\n      });\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Export of the data as txt. Collects all data from var and saves as string\n   */\n  export(){\n    let day = this.sharedVars.selectedDay.toLocaleDateString();\n    let title = this.sharedVars.selectedEntry.title;\n\n    //Array positiver Emotionen zu String umwandeln\n    let pos = '';\n    this.getEmotions(this.sharedVars.avaiablePositiveEmotions,this.sharedVars.selectedEntry.positiveEmotions).forEach(e => {\n      pos += e.name + ' ';\n    });\n\n    //Array negativer Emotionen zu String umwandeln\n    let neg = '';\n    this.getEmotions(this.sharedVars.avaiableNegativeEmotions,this.sharedVars.selectedEntry.negativeEmotions).forEach(e => {\n      neg += e.name +' ';\n    })\n\n    let text = this.sharedVars.selectedEntry.text;\n    let tagstring = this.sharedVars.selectedEntry.tags;\n\n\n\n    let file = day + \"\\n\" +\n               title +\n               \"\\n \\n Positive Emotions: \" + pos +\n               \"\\n Negative Emotions: \" + neg +\n               \"\\n \\n\" + text +\n               \"\\n Tags: \" + tagstring;\n    let filename = title+\".txt\";\n    // Service der File saved\n    this.saveService.saveText(file, filename);\n  }\n\n  /**\n   * Gibt die Emotionen zurück die Selektiert sind\n   * @param aviableList Alle verfügbaren emotionen\n   * @param selectedList Selektierte emotionen\n   */\n  getEmotions(aviableList: Array, selectedList: Array): Array{\n    return aviableList.filter(e => {\n      let k = false;\n      selectedList.forEach(s =>{\n        if(e._id === s._id){\n          k = true;\n          return k;\n        }\n      });\n      return k;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    \n      {{this.sharedVars.selectedDay.toLocaleDateString()}}\n    \n  \n\n  \n    \n      \n        {{this.sharedVars.selectedEntry.title}}\n      \n    \n  \n\n  \n    \n\n  \n  \n    \n  \n\n\n  \n    \n\n  \n\n\n  \n    \n\n  \n\n\n  Export\n\n\n\n\n\n\n  \n    \n      Your Mood on {{this.sharedVars.selectedDay.toLocaleDateString()}}\n    \n  \n  \n    \n      \n        \n          {{this.sharedVars.selectedEntry.title}} &nbsp;\n        \n      \n      \n        \n          \n            {{this.sharedVars.selectedEntry.text}}\n\n          \n        \n      \n    \n    \n      \n        \n          \n        \n        \n          \n        \n    \n      \n        \n          \n            #{{tag}} \n          \n        \n      \n      \n        \n          Export\n        \n      \n\n  \n\n\n    \n\n    \n                \n                    ./read-mood.component.css\n                \n                .title> h3{\nmargin-top: 10px;\n  margin-bottom: 10px;\n  letter-spacing: 2px;\n}\n.para-tall{\n  padding-top: 5px;\n  padding-left: 15px;\n  height: 400px;\n  overflow: hidden;\n  overflow-y: auto;\n}\n.tags{\n  padding-top: 10px;\n  height: 50px;\n  margin-top: -0.2%;\n}\n.click-desktop{\n  padding: 2%;\n  font-family: Oswald;\n  font-weight: lighter;\n  font-size: 1.3em;\n  margin-top: -0.1%;\n}\n.click-mobile{\n  padding: 2%;\n  font-family: Oswald;\n  font-weight: lighter;\n  font-size: 1.3em;\n}\n.logOut{\n\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{this.sharedVars.selectedDay.toLocaleDateString()}}                          {{this.sharedVars.selectedEntry.title}}                                              Export            Your Mood on {{this.sharedVars.selectedDay.toLocaleDateString()}}                                    {{this.sharedVars.selectedEntry.title}}                                                    {{this.sharedVars.selectedEntry.text}}                                                                                                                                  #{{tag}}                                                 Export                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReadMoodComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                repeatPw\n                            \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                            \n                                toLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, responsive: ResponsiveService, rest: RestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repeatPw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        repeatPw:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ResponsiveService } from '../../services/responsive.service';\nimport { Router } from '@angular/router';\nimport {RestService} from '../../services/rest.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  username: string ;\n  email: string ;\n  password: string;\n  repeatPw: string;\n\n  constructor(private router: Router, public responsive:ResponsiveService, private rest:RestService) {\n    this.username = '';\n    this.email = '';\n    this.password = '';\n    this.repeatPw = '';\n  }\n\n  ngOnInit() {\n  }\n\n  submit(){\n    // Wurden ein Username und eine Email eingegeben?\n    if(this.username !== '' && this.email !== ''){\n      // Sind Passwort und das wiederholte Passwort gleich?\n      if(this.password === this.repeatPw){\n        // Auf Doppelte überprüfen\n        this.rest.register({\n          username: this.username,\n          email: this.email,\n          password: this.password,\n          password2: this.repeatPw\n        }).subscribe(data => {\n          console.log(`Registered? ${data}`);\n          this.router.navigateByUrl(\"/login\");\n        });\n      }\n    }\n\n  }\n\n  toLogin(){\n    this.router.navigateByUrl(\"/login\");\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n        \n            \n              Register\n            \n        \n        \n            \n                \n            \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            Register\n          \n        \n        \n          \n            Return to Login\n          \n        \n      \n    \n  \n  \n  \n  \n    \n      \n        \n            \n              Register\n            \n        \n        \n            \n                \n            \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            Register\n          \n        \n        \n          \n            Return to Login\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .content{\n    width: 30%;\n    position: absolute;\n    left: 35%;\n    transform: translate(0%, 5%);\n}\n.loginDesktop{\n    height: 620px;\n}\n.login{\n    height: 550px;\n}\n.save{\n    width: 25%;\n    min-width: 100px;\n    position: absolute;\n    left: 42.5%;\n}\n.register{\n    width: 40%;\n    min-width: 150px;\n    position: absolute;\n    left: 35%;\n    transform: translate(0, 80%);\n}\n.greencolor{\n    background-color: mediumturquoise;\n    color: whitesmoke;\n}\n.registerWidth{\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Register                                                                                                                                                                                                                                                          Register                                                Return to Login                                                                                Register                                                                                                                                                                                                                                                          Register                                                Return to Login                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponsiveService.html":{"url":"injectables/ResponsiveService.html","title":"injectable - ResponsiveService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResponsiveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/responsive.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isMobile\n                            \n                            \n                                    Private\n                                mobileSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMobile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/responsive.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMobile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/responsive.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMobile:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/responsive.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mobileSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobileSize:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/services/responsive.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponsiveService {\n\n  private isMobile: boolean;\n  private mobileSize;\n\n  constructor() {\n    this.mobileSize = 900;\n  }\n\n  public getMobile(): boolean {\n    this.isMobile = (window.innerWidth \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestService.html":{"url":"injectables/RestService.html","title":"injectable - RestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/rest.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ip\n                            \n                            \n                                    Private\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllEntries\n                            \n                            \n                                    Public\n                                getBadDayCount\n                            \n                            \n                                    Public\n                                getGoodDayCount\n                            \n                            \n                                    Public\n                                getLastCreatedEntry\n                            \n                            \n                                    Public\n                                getNegativeEmotions\n                            \n                            \n                                    Public\n                                getPositiveEmotions\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                saveEntry\n                            \n                            \n                                    Public\n                                searchEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/rest.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllEntries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getBadDayCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBadDayCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGoodDayCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGoodDayCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLastCreatedEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLastCreatedEntry()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNegativeEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNegativeEmotions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPositiveEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPositiveEmotions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(data)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(data)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveEntry(entry: Entry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                        \n                                                                    Entry\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        searchEntries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'localhost'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        port:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 3000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/rest.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Entry} from '../classes/entry';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  private ip = 'localhost';\n  private port = 3000;\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getPositiveEmotions(){\n    return this.http.get(`http://${this.ip}:3000/getPositiveEmotions`);\n  }\n  public getNegativeEmotions(){\n    return this.http.get(`http://${this.ip}:3000/getNegativeEmotions`);\n  }\n  public saveEntry(entry: Entry){\n    const data = {\n      title: entry.title,\n      text: entry.text,\n      tags: entry.tags,\n      positiveEmotions: entry.positiveEmotions.map(e => e._id),\n      negativeEmotions: entry.negativeEmotions.map(e => e._id),\n    };\n    console.log(data);\n\n    return this.http.post(`http://${this.ip}:3000/saveEntry`, data ,{withCredentials: true});\n  }\n  public getGoodDayCount(){\n    return this.http.get(`http://${this.ip}:3000/goodDayCount`, {withCredentials: true});\n  }\n  public getBadDayCount(){\n    return this.http.get(`http://${this.ip}:3000/badDayCount`, {withCredentials: true});\n  }\n  public getLastCreatedEntry(){\n    return this.http.get(`http://${this.ip}:3000/getLastEntry`,{withCredentials: true});\n  }\n  public getAllEntries(){\n    return this.http.get(`http://${this.ip}:3000/getAllEntries`,{withCredentials: true});\n  }\n  public searchEntries(){\n    return this.http.get(`http://${this.ip}:3000/searchEntries`);\n  }\n\n\n\n\n  public login(data){\n    console.log(data);\n    return this.http.post(`http://${this.ip}:3000/login`,data,{observe: 'response', withCredentials: true});\n  }\n  public register(data){\n    return this.http.post(`http://${this.ip}:3000/register`,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dates\n                            \n                            \n                                emotions\n                            \n                            \n                                regexDate\n                            \n                            \n                                regexEmotion\n                            \n                            \n                                regexTag\n                            \n                            \n                                regexText\n                            \n                            \n                                    Public\n                                rest\n                            \n                            \n                                searchText\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterDate\n                            \n                            \n                                    Private\n                                filterEmotion\n                            \n                            \n                                    Private\n                                filterTag\n                            \n                            \n                                inputSearchText\n                            \n                            \n                                isStringEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searching\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchingChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestService, vars: SharedVarsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vars\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searching\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchingChange\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterEmotion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterEmotion()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterTag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterTag()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputSearchText\n                            \n                            \n                        \n                    \n                \n                \n                    \ninputSearchText(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStringEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisStringEmpty(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        search()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dates:     Date[]\n\n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emotions:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regexDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regexDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[@]\\\\d{2}[.]\\\\d{2}.\\\\d{4}'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regexEmotion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regexEmotion:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[/]\\\\w\\\\D\\\\S+'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regexTag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regexTag:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[#]\\\\w+'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regexText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regexText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\\\s?\\\\w+'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rest:     RestService\n\n                    \n                \n                    \n                        \n                            Type :     RestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {RestService} from '../../services/rest.service';\nimport {SharedVarsService} from '../../services/shared-vars.service';\nimport {Entry} from '../../classes/entry';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  searchText: string;\n  @Input()\n    searching: boolean;\n  @Output()\n    searchingChange: EventEmitter = new EventEmitter();\n  regexDate = '[@]\\\\d{2}[.]\\\\d{2}.\\\\d{4}';\n  regexEmotion = '[/]\\\\w\\\\D\\\\S+';\n  regexTag = '[#]\\\\w+';\n  regexText = '\\\\s?\\\\w+';\n  //DELETE FOUND SUBSTRINGS FROM STRING FOR BETTER SEARCH\n\n  dates: Date[];\n  emotions: string[];\n  tags: string[];\n\n  constructor(public rest: RestService, private vars:SharedVarsService) {\n    this.dates = new Array();\n    this.emotions = new Array();\n    this.tags = new Array();\n    this.searchText = '';\n\n\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  inputSearchText(text:string){\n    this.searchText = text;\n    if(this.searchText.length  {\n      this.searching = true;\n      this.searchingChange.emit(this.searching);\n      this.filterDate();\n      this.filterEmotion();\n      this.filterTag();\n\n      console.log(this.searchText);\n      console.log(this.dates);\n      console.log(this.emotions);\n      console.log(this.tags);\n      let output = (value as Array).filter((entry) =>{\n        let resTags = entry.tags;\n        let resEmotions = entry.positiveEmotions;\n        let resDate = new Date(entry.createdOn);\n        let filter = false;\n\n\n        //TAGS\n        resTags = resTags.map((tag) =>{\n\n          return tag.toLowerCase();\n        });\n\n        resTags.forEach((tag) =>{\n          this.tags.forEach((x) =>{\n            if(x === tag){\n              filter = true;\n            }\n          });\n\n\n        });\n\n        //EMOTIONS\n        entry.negativeEmotions.forEach((emo) =>{\n          resEmotions.push(emo);\n        })\n\n        resEmotions = resEmotions.map((emo) =>{\n          emo.name =  emo.name.toLowerCase();\n          return emo;\n        });\n\n        resEmotions.forEach((emo) =>{\n          this.emotions.forEach((x) =>{\n            if(x === emo.name){\n              filter = true;\n            }\n          });\n        });\n        //DATE\n        this.dates.forEach((date) =>{\n          if(resDate.getFullYear() === date.getFullYear() && resDate.getMonth() === date.getMonth() && resDate.getDate() === date.getDate()){\n            filter = true;\n          }\n        });\n\n\n        return filter;\n      });\n      console.log(output);\n      output = output.map((entry) =>{\n        entry.createdOn = new Date(entry.createdOn);\n        return entry;\n      });\n      this.vars.searchEntries = output;\n    });\n\n    this.dates.length = 0;\n    this.emotions.length = 0;\n    this.tags.length = 0;\n  }\n\n  private filterDate(){\n    let d = this.searchText.match(/[@]\\d{2}[.]\\d{2}.\\d{4}/g);\n    if(d !== null){\n      d.forEach((value, index) => {\n        value =value.replace('@','');\n        let arr = value.split('.');\n        let date = new Date();\n        date.setFullYear(parseInt(arr[2]),parseInt(arr[1])-1,parseInt(arr[0]));\n        this.dates.push(date);\n\n      });\n      this.searchText = this.searchText.replace(/[@]\\d{2}[.]\\d{2}.\\d{4}/g, '');\n    }\n\n\n  }\n  private filterEmotion(){\n    let e = this.searchText.match(/[/]\\w\\D\\S+/g);\n    if(e !== null){\n      e.forEach((value, index) => {\n        value = value.replace('/','');\n        value = value.toLowerCase();\n        this.emotions.push(value);\n      });\n      this.searchText = this.searchText.replace(/[/]\\w\\D\\S+/g, '');\n    }\n\n\n  }\n  private filterTag(){\n    let t = this.searchText.match(/[#]\\w+/g);\n    if(t !== null){\n      t.forEach((value, index) => {\n        value = value.replace('#','');\n        value = value.toLowerCase();\n        console.log(value);\n        this.tags.push(value);\n      });\n      this.searchText = this.searchText.replace(/[#]\\w+/g, '');\n\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n    \n\n    \n                \n                    ./search.component.css\n                \n                #search{\n  width: 40px ;\n}\n.search-component{\n  position: absolute;\n  right: 15px;\n  top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchEntryListComponent.html":{"url":"components/SearchEntryListComponent.html","title":"component - SearchEntryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchEntryListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search-entry-list/search-entry-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-entry-list\n            \n\n            \n                styleUrls\n                ./search-entry-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-entry-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                vars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                viewEntry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(vars: SharedVarsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search-entry-list/search-entry-list.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vars\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search-entry-list/search-entry-list.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \nviewEntry(e: Entry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search-entry-list/search-entry-list.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    Entry\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            vars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        vars:     SharedVarsService\n\n                    \n                \n                    \n                        \n                            Type :     SharedVarsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search-entry-list/search-entry-list.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {RestService} from '../../services/rest.service';\nimport {Entry} from '../../classes/entry';\nimport {SharedVarsService} from '../../services/shared-vars.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-search-entry-list',\n  templateUrl: './search-entry-list.component.html',\n  styleUrls: ['./search-entry-list.component.css']\n})\nexport class SearchEntryListComponent implements OnInit {\n\n\n\n  constructor(public vars:SharedVarsService, private router: Router) {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  viewEntry(e: Entry){\n    this.vars.setSelectedEntry(e);\n    this.vars.selectedDay = e.createdOn;\n    this.router.navigateByUrl('readMood');\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{e.title}} {{e.createdOn.toLocaleDateString()}}\n\n        \n          {{e.text}}\n        \n\n      \n    \n\n\n  \n\n\n    \n\n    \n                \n                    ./search-entry-list.component.css\n                \n                .height-70{\n  height: 85vh;\n\n}\n.alignLeft{\n  text-align: left;\n  margin-left: 10px;\n  margin-top: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{e.title}} {{e.createdOn.toLocaleDateString()}}                  {{e.text}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchEntryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharedVarsService.html":{"url":"injectables/SharedVarsService.html","title":"injectable - SharedVarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SharedVarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/shared-vars.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                avaiableNegativeEmotions\n                            \n                            \n                                    Public\n                                avaiablePositiveEmotions\n                            \n                            \n                                    Public\n                                initializedEmotions\n                            \n                            \n                                    Public\n                                loggedIn\n                            \n                            \n                                    Public\n                                searchEntries\n                            \n                            \n                                    Public\n                                selectedDay\n                            \n                            \n                                    Public\n                                selectedDayEntries\n                            \n                            \n                                    Public\n                                selectedEntry\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dayType\n                            \n                            \n                                initAvaiableEmotions\n                            \n                            \n                                setSelectedEntry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/shared-vars.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndayType(entry: Entry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                        \n                                                                    Entry\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"gray\" | \"blue\" | \"red\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initAvaiableEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitAvaiableEmotions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Fetches the avaible emotions from server and emits an event when finished because async\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedEntry(entry: Entry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Sets the selected entry property and transforms some of its properties\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                        \n                                                                    Entry\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            avaiableNegativeEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        avaiableNegativeEmotions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            avaiablePositiveEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        avaiablePositiveEmotions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initializedEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initializedEmotions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchEntries:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedDay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDay:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedDayEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDayEntries:     Entry[]\n\n                    \n                \n                    \n                        \n                            Type :     Entry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedEntry:     Entry\n\n                    \n                \n                    \n                        \n                            Type :     Entry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared-vars.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {Entry} from '../classes/entry';\nimport {Emotion} from '../classes/emotion';\nimport {RestService} from './rest.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedVarsService {\n\n  public selectedDay: Date;\n  public selectedDayEntries: Entry[];\n  public selectedEntry: Entry;\n\n  public loggedIn: boolean;\n  public searchEntries: Array;\n\n  public avaiablePositiveEmotions: Array;\n  public avaiableNegativeEmotions: Array;\n  public initializedEmotions: EventEmitter ;\n\n  public username: string;\n\n  constructor(private rest: RestService) {\n    this.selectedDay = new Date();\n    this.selectedDayEntries = new Array();\n    this.selectedEntry = new Entry(new Date());\n\n    this.loggedIn = false;\n    this.searchEntries = new Array();\n\n    this.username = '';\n\n    this.initAvaiableEmotions();\n  }\n\n  dayType(entry: Entry){\n    if(entry.positiveEmotions.length > 0){\n      if(entry.negativeEmotions.length > 0){\n        return 'gray';\n      }else{\n        return 'blue';\n      }\n    }else{\n      return 'red';\n    }\n  }\n\n  /**\n   * Sets the selected entry property and transforms some of its properties\n   * @param entry\n   */\n  setSelectedEntry(entry:Entry){\n    this.selectedDay = new Date(entry.createdOn);\n    this.selectedEntry = entry;\n\n  }\n\n  /**\n   * Fetches the avaible emotions from server and emits an event when finished because async\n   */\n  initAvaiableEmotions(){\n    this.avaiablePositiveEmotions = new Array();\n    this.avaiableNegativeEmotions = new Array();\n    this.initializedEmotions = new EventEmitter();\n\n    this.rest.getPositiveEmotions().subscribe((data) =>{\n      (>data).forEach((element) =>{\n        this.avaiablePositiveEmotions.push(new Emotion(element.type, element.name,false, element._id));\n      });\n      this.avaiablePositiveEmotions = Emotion.sortEmotions(this.avaiablePositiveEmotions);\n    });\n    this.rest.getNegativeEmotions().subscribe((data) =>{\n      (>data).forEach((element) =>{\n        this.avaiableNegativeEmotions.push(new Emotion(element.type, element.name, false, element._id));\n\n      });\n      this.avaiableNegativeEmotions = Emotion.sortEmotions(this.avaiableNegativeEmotions);\n      this.initializedEmotions.emit(true);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WriteMoodComponent.html":{"url":"components/WriteMoodComponent.html","title":"component - WriteMoodComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WriteMoodComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/write-mood/write-mood.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-write-mood\n            \n\n            \n                styleUrls\n                ./write-mood.component.css\n            \n\n\n\n            \n                templateUrl\n                ./write-mood.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                moodText\n                            \n                            \n                                negEmotions\n                            \n                            \n                                posEmotions\n                            \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                tags\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestService, router: Router, responsive: ResponsiveService, shared: SharedVarsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/write-mood/write-mood.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responsive\n                                                  \n                                                        \n                                                                    ResponsiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shared\n                                                  \n                                                        \n                                                                    SharedVarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/write-mood/write-mood.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/write-mood/write-mood.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moodText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moodText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/write-mood/write-mood.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            negEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        negEmotions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/write-mood/write-mood.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posEmotions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posEmotions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/write-mood/write-mood.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responsive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        responsive:     ResponsiveService\n\n                    \n                \n                    \n                        \n                            Type :     ResponsiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/write-mood/write-mood.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/write-mood/write-mood.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/write-mood/write-mood.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {Emotion} from '../../classes/emotion';\nimport {RestService} from '../../services/rest.service';\nimport {Entry} from '../../classes/entry';\nimport {Router} from '@angular/router';\nimport {ResponsiveService} from '../../services/responsive.service';\nimport {SharedVarsService} from '../../services/shared-vars.service';\n\n@Component({\n  selector: 'app-write-mood',\n  templateUrl: './write-mood.component.html',\n  styleUrls: ['./write-mood.component.css']\n})\nexport class WriteMoodComponent implements OnInit {\n\n  posEmotions: Array;\n  negEmotions: Array;\n\n  tags: string;\n  moodText: string;\n  title: string;\n\n  constructor(private rest:RestService, private router: Router, public responsive:ResponsiveService,private shared:SharedVarsService) {\n    this.posEmotions = new Array();\n    this.negEmotions = new Array();\n\n\n\n    this.tags = '';\n    this.moodText = '';\n    this.title = '';\n\n  }\n\n  ngOnInit() {\n\n      this.shared.initializedEmotions.subscribe(v => {\n\n        this.posEmotions = this.shared.avaiablePositiveEmotions.slice(0, this.shared.avaiablePositiveEmotions.length);\n        this.negEmotions = this.shared.avaiableNegativeEmotions.slice(0, this.shared.avaiableNegativeEmotions.length);\n      });\n\n      if(this.shared.avaiablePositiveEmotions.length > 0) {\n        this.posEmotions = this.shared.avaiablePositiveEmotions.slice(0, this.shared.avaiablePositiveEmotions.length);\n        this.negEmotions = this.shared.avaiableNegativeEmotions.slice(0, this.shared.avaiableNegativeEmotions.length);\n      }\n    console.log('init');\n  }\n\n\n  submit(){\n    let entry = new Entry(new Date());\n    entry.tags = this.tags.split('#');\n    entry.text = this.moodText;\n    entry.title = this.title;\n\n    entry.positiveEmotions = this.posEmotions.filter((element) =>{\n      if(element.isActive){\n        return element;\n      }\n    });\n    entry.negativeEmotions = this.negEmotions.filter((element) => {\n      if(element.isActive){\n        return element;\n      }\n    });\n    this.rest.saveEntry(entry).subscribe((entry) => {\n      console.log(JSON.stringify(entry));\n      this.posEmotions.map(e =>{\n        e.isActive = false;\n        return e;\n      });\n      this.negEmotions.map(e =>{\n        e.isActive = false;\n        return e;\n      })\n      this.router.navigateByUrl('/dashboard');\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    EMOTIONS\n  \n\n  \n    \n      \n\n    \n  \n\n  \n    \n  \n  \n  \n\n\n\n\n  \n    \n  \n\n\n  \n    \n  \n\n\n  \n    \n      \n    \n  \n\n\n\n\n\n\n  \n    \n      Write Mood\n    \n  \n  \n    \n      \n        \n          \n\n        \n      \n      \n        \n          \n        \n      \n    \n    \n      \n        \n          \n        \n        \n          \n        \n      \n      \n        \n          \n        \n      \n      \n        \n          Save!\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./write-mood.component.css\n                \n                .heading{\n  font-family: Oswald;\n\n\n  font-style: italic;\n  text-align: center;\n  position: relative;\n  top: 50%;\n  transform: translate(0%,-50%);\n  font-size: 2em;\n}\n.commitMood{\n  border-radius: 200px;\n  width: 60px;\n  height: 60px;\n  background-color: #4A96D3;\n  border-style: none;\n  margin: auto;\n  display: block;\n  margin-top: 15px;\n  margin-bottom: 15px;\n}\n.commitMood > img{\n  margin: 0px 5px 0px 5px;\n}\n\n.input-desktop{\n  outline: none;\n  width: 100%;\n  border-radius: 10px;\n  border-style: none;\n  border-color: #aaaaaa;\n  border-width: 1.5px;\n  height: 50px;\n  padding-left: 10px;\n  padding-right: 10px;\n  color: #333333;\n\n}\n.textarea-desktop{\n  outline: none;\n  width: 100%;\n  border-radius: 10px;\n  border-style: none;\n  border-color: #aaaaaa;\n  border-width: 1.5px;\n  resize: none;\n  padding: 10px 10px 10px 10px;\n  color: #333333;\n}\n.button{\n  width: 100%;\n  background-color: #4A96D3;\n  height: 60px;\n  border-style: none;\n  text-align: center;\n  padding-top: 10px;\n  font-size: 20pt;\n  font-family: \"Oswald Regular\";\n  font-weight: bold;\n  letter-spacing: 3px;\n  color: white;\n  transition: background-color 0.2s;\n}\n.button:hover{\n  background-color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      EMOTIONS                                                                              Write Mood                                                                                                                                                                                                                              Save!                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmotionListComponent', 'selector': 'app-emotion-list'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ReadMoodComponent', 'selector': 'app-read-mood'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchEntryListComponent', 'selector': 'app-search-entry-list'},{'name': 'WriteMoodComponent', 'selector': 'app-write-mood'}];\n    var DIRECTIVES = [{'name': 'ClickOutsideDirective', 'selector': '[appClickOutside]'}];\n    var ACTUAL_COMPONENT = {'name': 'WriteMoodComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/emotion.ts\n            \n            \n                class\n            \n            \n                Emotion\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/classes/entry.ts\n            \n            \n                class\n            \n            \n                Entry\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/calendar/calendar.component.ts\n            \n            \n                component\n            \n            \n                CalendarComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/emotion-list/emotion-list.component.ts\n            \n            \n                component\n            \n            \n                EmotionListComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/entry-list/entry-list.component.ts\n            \n            \n                component\n            \n            \n                EntryListComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/navigation/navigation.component.ts\n            \n            \n                component\n            \n            \n                NavigationComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/read-mood/read-mood.component.ts\n            \n            \n                component\n            \n            \n                ReadMoodComponent\n            \n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/search-entry-list/search-entry-list.component.ts\n            \n            \n                component\n            \n            \n                SearchEntryListComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            \n                component\n            \n            \n                SearchComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/write-mood/write-mood.component.ts\n            \n            \n                component\n            \n            \n                WriteMoodComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/directives/click-outside.directive.ts\n            \n            \n                directive\n            \n            \n                ClickOutsideDirective\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/responsive.service.ts\n            \n            \n                injectable\n            \n            \n                ResponsiveService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/rest.service.ts\n            \n            \n                injectable\n            \n            \n                RestService\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/shared-vars.service.ts\n            \n            \n                injectable\n            \n            \n                SharedVarsService\n            \n            \n                14 %\n                (2/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            @types/file-saver : ^2.0.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            express : ^4.16.4\n        \n            file-saver : ^2.0.0\n        \n            jquery : ^3.3.1\n        \n            mongodb : ^3.1.10\n        \n            morgan : ^1.9.1\n        \n            ngx-cookie-service : ^2.1.0\n        \n            ngx-filesaver : ^2.2.0\n        \n            popper.js : ^1.14.5\n        \n            rxjs : ^6.0.0\n        \n            serve-static : ^1.13.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoodApp\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\nAppModule -->\n\nCalendarComponent->AppModule\n\n\n\n\n\nClickOutsideDirective\n\nClickOutsideDirective\n\nAppModule -->\n\nClickOutsideDirective->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nEmotionListComponent\n\nEmotionListComponent\n\nAppModule -->\n\nEmotionListComponent->AppModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nAppModule -->\n\nEntryListComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nReadMoodComponent\n\nReadMoodComponent\n\nAppModule -->\n\nReadMoodComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSearchEntryListComponent\n\nSearchEntryListComponent\n\nAppModule -->\n\nSearchEntryListComponent->AppModule\n\n\n\n\n\nWriteMoodComponent\n\nWriteMoodComponent\n\nAppModule -->\n\nWriteMoodComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
